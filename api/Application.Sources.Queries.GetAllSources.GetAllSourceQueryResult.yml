### YamlMime:ManagedReference
items:
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  commentId: T:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  id: GetAllSourceQueryResult
  parent: Application.Sources.Queries.GetAllSources
  children:
  - Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
  - Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
  - Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
  - Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
  - Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
  langs:
  - csharp
  - vb
  name: GetAllSourceQueryResult
  nameWithType: GetAllSourceQueryResult
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  type: Class
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetAllSourceQueryResult
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 8
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "Success response to get all the sources")]

      public class GetAllSourceQueryResult
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="Success response to get all the sources")>

      Public Class GetAllSourceQueryResult
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  - System.Object.Domain.Extentions.ObjectExtention.IsNull
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: Success response to get all the sources
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
  commentId: P:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
  id: Id
  parent: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: GetAllSourceQueryResult.Id
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
  type: Property
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Id
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 11
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "An UUID unique id for source", ReadOnly = true, Format = "UUID", Nullable = false, Title = "Source Unique Identifier")]

      [SwaggerExample("01979c44-b446-7380-ad8b-df6b2a2be0bc")]

      public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="An UUID unique id for source", ReadOnly:=True, Format:="UUID", Nullable:=False, Title:="Source Unique Identifier")>

      <SwaggerExample("01979c44-b446-7380-ad8b-df6b2a2be0bc")>

      Public Property Id As Guid
  overload: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id*
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: An UUID unique id for source
    - name: ReadOnly
      type: System.Boolean
      value: true
    - name: Format
      type: System.String
      value: UUID
    - name: Nullable
      type: System.Boolean
      value: false
    - name: Title
      type: System.String
      value: Source Unique Identifier
  - type: Application.Commons.Attributes.SwaggerExampleAttribute
    ctor: Application.Commons.Attributes.SwaggerExampleAttribute.#ctor(System.Object)
    arguments:
    - type: System.String
      value: 01979c44-b446-7380-ad8b-df6b2a2be0bc
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
  commentId: P:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
  id: Type
  parent: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: GetAllSourceQueryResult.Type
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
  type: Property
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Type
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 14
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "An type of a source", ReadOnly = true, Format = "UUID", Nullable = false, Title = "Source Unique Identifier")]

      [SwaggerExample(SourceType.Article)]

      [StringLength(50, MinimumLength = 1)]

      public SourceType Type { get; set; }
    parameters: []
    return:
      type: Domain.Enums.SourceType
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="An type of a source", ReadOnly:=True, Format:="UUID", Nullable:=False, Title:="Source Unique Identifier")>

      <SwaggerExample(SourceType.Article)>

      <StringLength(50, MinimumLength:=1)>

      Public Property Type As SourceType
  overload: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type*
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: An type of a source
    - name: ReadOnly
      type: System.Boolean
      value: true
    - name: Format
      type: System.String
      value: UUID
    - name: Nullable
      type: System.Boolean
      value: false
    - name: Title
      type: System.String
      value: Source Unique Identifier
  - type: Application.Commons.Attributes.SwaggerExampleAttribute
    ctor: Application.Commons.Attributes.SwaggerExampleAttribute.#ctor(System.Object)
    arguments:
    - type: Domain.Enums.SourceType
      value: 3
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
  commentId: P:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
  id: Title
  parent: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: GetAllSourceQueryResult.Title
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
  type: Property
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Title
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 18
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "A source Title", Nullable = false, Title = "Source title")]

      [SwaggerExample("Intro programming")]

      [StringLength(100, MinimumLength = 1)]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="A source Title", Nullable:=False, Title:="Source title")>

      <SwaggerExample("Intro programming")>

      <StringLength(100, MinimumLength:=1)>

      Public Property Title As String
  overload: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title*
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: A source Title
    - name: Nullable
      type: System.Boolean
      value: false
    - name: Title
      type: System.String
      value: Source title
  - type: Application.Commons.Attributes.SwaggerExampleAttribute
    ctor: Application.Commons.Attributes.SwaggerExampleAttribute.#ctor(System.Object)
    arguments:
    - type: System.String
      value: Intro programming
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
  commentId: P:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
  id: Description
  parent: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: GetAllSourceQueryResult.Description
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
  type: Property
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Description
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 22
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "short description for a source", Nullable = true, Title = "Source description")]

      [SwaggerExample("Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc")]

      [StringLength(2500, MinimumLength = 1)]

      public string? Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="short description for a source", Nullable:=True, Title:="Source description")>

      <SwaggerExample("Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc")>

      <StringLength(2500, MinimumLength:=1)>

      Public Property Description As String
  overload: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description*
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: short description for a source
    - name: Nullable
      type: System.Boolean
      value: true
    - name: Title
      type: System.String
      value: Source description
  - type: Application.Commons.Attributes.SwaggerExampleAttribute
    ctor: Application.Commons.Attributes.SwaggerExampleAttribute.#ctor(System.Object)
    arguments:
    - type: System.String
      value: Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2500
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
  commentId: P:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
  id: Tags
  parent: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: GetAllSourceQueryResult.Tags
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
  type: Property
  source:
    remote:
      path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Tags
    path: src/Application/Sources/Queries/GetAllSources/GetAllSourceQueryResult.cs
    startLine: 26
  assemblies:
  - Application
  namespace: Application.Sources.Queries.GetAllSources
  syntax:
    content: >-
      [SwaggerSchema(null, Description = "An collection of tags", Nullable = true, Title = "Source Tags")]

      [Range(1, 50)]

      public List<TagResult>? Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Application.Commons.SharedModelResult.TagResult}
    content.vb: >-
      <SwaggerSchema(Nothing, Description:="An collection of tags", Nullable:=True, Title:="Source Tags")>

      <Range(1, 50)>

      Public Property Tags As List(Of TagResult)
  overload: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags*
  attributes:
  - type: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute
    ctor: Swashbuckle.AspNetCore.Annotations.SwaggerSchemaAttribute.#ctor(System.String)
    arguments:
    - type: System.String
    namedArguments:
    - name: Description
      type: System.String
      value: An collection of tags
    - name: Nullable
      type: System.Boolean
      value: true
    - name: Title
      type: System.String
      value: Source Tags
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    - type: System.Int32
      value: 50
references:
- uid: Application.Sources.Queries.GetAllSources
  commentId: N:Application.Sources.Queries.GetAllSources
  href: Application.html
  name: Application.Sources.Queries.GetAllSources
  nameWithType: Application.Sources.Queries.GetAllSources
  fullName: Application.Sources.Queries.GetAllSources
  spec.csharp:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Sources
    name: Sources
    href: Application.Sources.html
  - name: .
  - uid: Application.Sources.Queries
    name: Queries
    href: Application.Sources.Queries.html
  - name: .
  - uid: Application.Sources.Queries.GetAllSources
    name: GetAllSources
    href: Application.Sources.Queries.GetAllSources.html
  spec.vb:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Sources
    name: Sources
    href: Application.Sources.html
  - name: .
  - uid: Application.Sources.Queries
    name: Queries
    href: Application.Sources.Queries.html
  - name: .
  - uid: Application.Sources.Queries.GetAllSources
    name: GetAllSources
    href: Application.Sources.Queries.GetAllSources.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention
  commentId: T:Domain.Extentions.ObjectExtention
  parent: Domain.Extentions
  href: Domain.Extentions.ObjectExtention.html
  name: ObjectExtention
  nameWithType: ObjectExtention
  fullName: Domain.Extentions.ObjectExtention
- uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id*
  commentId: Overload:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
  href: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.html#Application_Sources_Queries_GetAllSources_GetAllSourceQueryResult_Id
  name: Id
  nameWithType: GetAllSourceQueryResult.Id
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type*
  commentId: Overload:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
  href: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.html#Application_Sources_Queries_GetAllSources_GetAllSourceQueryResult_Type
  name: Type
  nameWithType: GetAllSourceQueryResult.Type
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Type
- uid: Domain.Enums.SourceType
  commentId: T:Domain.Enums.SourceType
  parent: Domain.Enums
  href: Domain.Enums.SourceType.html
  name: SourceType
  nameWithType: SourceType
  fullName: Domain.Enums.SourceType
- uid: Domain.Enums
  commentId: N:Domain.Enums
  href: Domain.html
  name: Domain.Enums
  nameWithType: Domain.Enums
  fullName: Domain.Enums
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Enums
    name: Enums
    href: Domain.Enums.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Enums
    name: Enums
    href: Domain.Enums.html
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title*
  commentId: Overload:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
  href: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.html#Application_Sources_Queries_GetAllSources_GetAllSourceQueryResult_Title
  name: Title
  nameWithType: GetAllSourceQueryResult.Title
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description*
  commentId: Overload:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
  href: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.html#Application_Sources_Queries_GetAllSources_GetAllSourceQueryResult_Description
  name: Description
  nameWithType: GetAllSourceQueryResult.Description
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Description
- uid: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags*
  commentId: Overload:Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
  href: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.html#Application_Sources_Queries_GetAllSources_GetAllSourceQueryResult_Tags
  name: Tags
  nameWithType: GetAllSourceQueryResult.Tags
  fullName: Application.Sources.Queries.GetAllSources.GetAllSourceQueryResult.Tags
- uid: System.Collections.Generic.List{Application.Commons.SharedModelResult.TagResult}
  commentId: T:System.Collections.Generic.List{Application.Commons.SharedModelResult.TagResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TagResult>
  nameWithType: List<TagResult>
  fullName: System.Collections.Generic.List<Application.Commons.SharedModelResult.TagResult>
  nameWithType.vb: List(Of TagResult)
  fullName.vb: System.Collections.Generic.List(Of Application.Commons.SharedModelResult.TagResult)
  name.vb: List(Of TagResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Application.Commons.SharedModelResult.TagResult
    name: TagResult
    href: Application.Commons.SharedModelResult.TagResult.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Application.Commons.SharedModelResult.TagResult
    name: TagResult
    href: Application.Commons.SharedModelResult.TagResult.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
