### YamlMime:ManagedReference
items:
- uid: Infrastructure.Repositories.TagRepository
  commentId: T:Infrastructure.Repositories.TagRepository
  id: TagRepository
  parent: Infrastructure.Repositories
  children:
  - Infrastructure.Repositories.TagRepository.#ctor(System.String)
  - Infrastructure.Repositories.TagRepository.ArchiveTag(System.Guid)
  - Infrastructure.Repositories.TagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  - Infrastructure.Repositories.TagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  - Infrastructure.Repositories.TagRepository.GetTagReference(System.String)
  - Infrastructure.Repositories.TagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  - Infrastructure.Repositories.TagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  - Infrastructure.Repositories.TagRepository.IsExist(System.Guid)
  - Infrastructure.Repositories.TagRepository.IsExist(System.String)
  - Infrastructure.Repositories.TagRepository.IsExist(System.String,System.Guid)
  - Infrastructure.Repositories.TagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  - Infrastructure.Repositories.TagRepository.IsNotExist(System.Guid)
  - Infrastructure.Repositories.TagRepository.UnArchiveTag(System.Guid)
  langs:
  - csharp
  - vb
  name: TagRepository
  nameWithType: TagRepository
  fullName: Infrastructure.Repositories.TagRepository
  type: Class
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: TagRepository
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 6
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  syntax:
    content: 'public class TagRepository : BaseRepository<Tag>, ITagRepository, IBaseRepository<Tag>, IDisposable'
    content.vb: Public Class TagRepository Inherits BaseRepository(Of Tag) Implements ITagRepository, IBaseRepository(Of Tag), IDisposable
  inheritance:
  - System.Object
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  implements:
  - Domain.Repositories.ITagRepository
  - Domain.Repositories.RepositoryBase.IBaseRepository{Domain.Entities.EntityLookup.Tag}
  - System.IDisposable
  inheritedMembers:
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._db
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collection
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collectionName
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(Domain.Entities.EntityLookup.Tag)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(Domain.Entities.EntityLookup.Tag)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteById(System.Guid)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteAll
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetById(System.Guid)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAllAsync(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Int32,System.Int32)
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetCollection
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Count
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountBy(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountAsync
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  - Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Dispose
  extensionMethods:
  - System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  - System.Object.Domain.Extentions.ObjectExtention.IsNull
- uid: Infrastructure.Repositories.TagRepository.#ctor(System.String)
  commentId: M:Infrastructure.Repositories.TagRepository.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: TagRepository(string)
  nameWithType: TagRepository.TagRepository(string)
  fullName: Infrastructure.Repositories.TagRepository.TagRepository(string)
  type: Constructor
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: .ctor
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 8
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  syntax:
    content: public TagRepository(string databasePath)
    parameters:
    - id: databasePath
      type: System.String
    content.vb: Public Sub New(databasePath As String)
  overload: Infrastructure.Repositories.TagRepository.#ctor*
  nameWithType.vb: TagRepository.New(String)
  fullName.vb: Infrastructure.Repositories.TagRepository.New(String)
  name.vb: New(String)
- uid: Infrastructure.Repositories.TagRepository.IsExist(System.String)
  commentId: M:Infrastructure.Repositories.TagRepository.IsExist(System.String)
  id: IsExist(System.String)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsExist(string)
  nameWithType: TagRepository.IsExist(string)
  fullName: Infrastructure.Repositories.TagRepository.IsExist(string)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 14
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsExist(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsExist(name As String) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsExist*
  implements:
  - Domain.Repositories.ITagRepository.IsExist(System.String)
  nameWithType.vb: TagRepository.IsExist(String)
  fullName.vb: Infrastructure.Repositories.TagRepository.IsExist(String)
  name.vb: IsExist(String)
- uid: Infrastructure.Repositories.TagRepository.IsExist(System.String,System.Guid)
  commentId: M:Infrastructure.Repositories.TagRepository.IsExist(System.String,System.Guid)
  id: IsExist(System.String,System.Guid)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsExist(string, Guid)
  nameWithType: TagRepository.IsExist(string, Guid)
  fullName: Infrastructure.Repositories.TagRepository.IsExist(string, System.Guid)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 17
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsExist(string name, Guid id)
    parameters:
    - id: name
      type: System.String
    - id: id
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function IsExist(name As String, id As Guid) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsExist*
  implements:
  - Domain.Repositories.ITagRepository.IsExist(System.String,System.Guid)
  nameWithType.vb: TagRepository.IsExist(String, Guid)
  fullName.vb: Infrastructure.Repositories.TagRepository.IsExist(String, System.Guid)
  name.vb: IsExist(String, Guid)
- uid: Infrastructure.Repositories.TagRepository.IsExist(System.Guid)
  commentId: M:Infrastructure.Repositories.TagRepository.IsExist(System.Guid)
  id: IsExist(System.Guid)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsExist(Guid)
  nameWithType: TagRepository.IsExist(Guid)
  fullName: Infrastructure.Repositories.TagRepository.IsExist(System.Guid)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 20
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsExist(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function IsExist(id As Guid) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsExist*
  implements:
  - Domain.Repositories.ITagRepository.IsExist(System.Guid)
- uid: Infrastructure.Repositories.TagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Infrastructure.Repositories.TagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  id: IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsExist(IEnumerable<Guid>)
  nameWithType: TagRepository.IsExist(IEnumerable<Guid>)
  fullName: Infrastructure.Repositories.TagRepository.IsExist(System.Collections.Generic.IEnumerable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 23
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsExist(IEnumerable<Guid> ids)
    parameters:
    - id: ids
      type: System.Collections.Generic.IEnumerable{System.Guid}
    return:
      type: System.Boolean
    content.vb: Public Function IsExist(ids As IEnumerable(Of Guid)) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsExist*
  implements:
  - Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  nameWithType.vb: TagRepository.IsExist(IEnumerable(Of Guid))
  fullName.vb: Infrastructure.Repositories.TagRepository.IsExist(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: IsExist(IEnumerable(Of Guid))
- uid: Infrastructure.Repositories.TagRepository.IsNotExist(System.Guid)
  commentId: M:Infrastructure.Repositories.TagRepository.IsNotExist(System.Guid)
  id: IsNotExist(System.Guid)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsNotExist(Guid)
  nameWithType: TagRepository.IsNotExist(Guid)
  fullName: Infrastructure.Repositories.TagRepository.IsNotExist(System.Guid)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsNotExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 26
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsNotExist(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function IsNotExist(id As Guid) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsNotExist*
  implements:
  - Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
- uid: Infrastructure.Repositories.TagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Infrastructure.Repositories.TagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  id: IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: IsNotExist(IEnumerable<Guid>)
  nameWithType: TagRepository.IsNotExist(IEnumerable<Guid>)
  fullName: Infrastructure.Repositories.TagRepository.IsNotExist(System.Collections.Generic.IEnumerable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsNotExist
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 29
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public bool IsNotExist(IEnumerable<Guid> ids)
    parameters:
    - id: ids
      type: System.Collections.Generic.IEnumerable{System.Guid}
    return:
      type: System.Boolean
    content.vb: Public Function IsNotExist(ids As IEnumerable(Of Guid)) As Boolean
  overload: Infrastructure.Repositories.TagRepository.IsNotExist*
  implements:
  - Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  nameWithType.vb: TagRepository.IsNotExist(IEnumerable(Of Guid))
  fullName.vb: Infrastructure.Repositories.TagRepository.IsNotExist(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: IsNotExist(IEnumerable(Of Guid))
- uid: Infrastructure.Repositories.TagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Infrastructure.Repositories.TagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  id: GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: GetNotFoundTags(IEnumerable<Guid>)
  nameWithType: TagRepository.GetNotFoundTags(IEnumerable<Guid>)
  fullName: Infrastructure.Repositories.TagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetNotFoundTags
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 32
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public IEnumerable<Guid> GetNotFoundTags(IEnumerable<Guid> inputIds)
    parameters:
    - id: inputIds
      type: System.Collections.Generic.IEnumerable{System.Guid}
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public Function GetNotFoundTags(inputIds As IEnumerable(Of Guid)) As IEnumerable(Of Guid)
  overload: Infrastructure.Repositories.TagRepository.GetNotFoundTags*
  implements:
  - Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  nameWithType.vb: TagRepository.GetNotFoundTags(IEnumerable(Of Guid))
  fullName.vb: Infrastructure.Repositories.TagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: GetNotFoundTags(IEnumerable(Of Guid))
- uid: Infrastructure.Repositories.TagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Infrastructure.Repositories.TagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  id: GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: GetTagsReference(IEnumerable<string>)
  nameWithType: TagRepository.GetTagsReference(IEnumerable<string>)
  fullName: Infrastructure.Repositories.TagRepository.GetTagsReference(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetTagsReference
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 38
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public IEnumerable<Guid> GetTagsReference(IEnumerable<string> tags)
    parameters:
    - id: tags
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public Function GetTagsReference(tags As IEnumerable(Of String)) As IEnumerable(Of Guid)
  overload: Infrastructure.Repositories.TagRepository.GetTagsReference*
  implements:
  - Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  nameWithType.vb: TagRepository.GetTagsReference(IEnumerable(Of String))
  fullName.vb: Infrastructure.Repositories.TagRepository.GetTagsReference(System.Collections.Generic.IEnumerable(Of String))
  name.vb: GetTagsReference(IEnumerable(Of String))
- uid: Infrastructure.Repositories.TagRepository.GetTagReference(System.String)
  commentId: M:Infrastructure.Repositories.TagRepository.GetTagReference(System.String)
  id: GetTagReference(System.String)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: GetTagReference(string)
  nameWithType: TagRepository.GetTagReference(string)
  fullName: Infrastructure.Repositories.TagRepository.GetTagReference(string)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetTagReference
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 42
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public Guid GetTagReference(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Guid
    content.vb: Public Function GetTagReference(tag As String) As Guid
  overload: Infrastructure.Repositories.TagRepository.GetTagReference*
  implements:
  - Domain.Repositories.ITagRepository.GetTagReference(System.String)
  nameWithType.vb: TagRepository.GetTagReference(String)
  fullName.vb: Infrastructure.Repositories.TagRepository.GetTagReference(String)
  name.vb: GetTagReference(String)
- uid: Infrastructure.Repositories.TagRepository.ArchiveTag(System.Guid)
  commentId: M:Infrastructure.Repositories.TagRepository.ArchiveTag(System.Guid)
  id: ArchiveTag(System.Guid)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: ArchiveTag(Guid)
  nameWithType: TagRepository.ArchiveTag(Guid)
  fullName: Infrastructure.Repositories.TagRepository.ArchiveTag(System.Guid)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: ArchiveTag
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 45
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public void ArchiveTag(Guid id)
    parameters:
    - id: id
      type: System.Guid
    content.vb: Public Sub ArchiveTag(id As Guid)
  overload: Infrastructure.Repositories.TagRepository.ArchiveTag*
  implements:
  - Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
- uid: Infrastructure.Repositories.TagRepository.UnArchiveTag(System.Guid)
  commentId: M:Infrastructure.Repositories.TagRepository.UnArchiveTag(System.Guid)
  id: UnArchiveTag(System.Guid)
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: UnArchiveTag(Guid)
  nameWithType: TagRepository.UnArchiveTag(Guid)
  fullName: Infrastructure.Repositories.TagRepository.UnArchiveTag(System.Guid)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: UnArchiveTag
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 55
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public void UnArchiveTag(Guid id)
    parameters:
    - id: id
      type: System.Guid
    content.vb: Public Sub UnArchiveTag(id As Guid)
  overload: Infrastructure.Repositories.TagRepository.UnArchiveTag*
  implements:
  - Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
- uid: Infrastructure.Repositories.TagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Infrastructure.Repositories.TagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  id: GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  parent: Infrastructure.Repositories.TagRepository
  langs:
  - csharp
  - vb
  name: GetAllAvailableTags(IEnumerable<string>)
  nameWithType: TagRepository.GetAllAvailableTags(IEnumerable<string>)
  fullName: Infrastructure.Repositories.TagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/Infrastructure/Repositories/TagRepository.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetAllAvailableTags
    path: src/Infrastructure/Repositories/TagRepository.cs
    startLine: 64
  assemblies:
  - Infrastructure
  namespace: Infrastructure.Repositories
  example: []
  syntax:
    content: public IEnumerable<string> GetAllAvailableTags(IEnumerable<string> tags)
    parameters:
    - id: tags
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Function GetAllAvailableTags(tags As IEnumerable(Of String)) As IEnumerable(Of String)
  overload: Infrastructure.Repositories.TagRepository.GetAllAvailableTags*
  implements:
  - Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  nameWithType.vb: TagRepository.GetAllAvailableTags(IEnumerable(Of String))
  fullName.vb: Infrastructure.Repositories.TagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable(Of String))
  name.vb: GetAllAvailableTags(IEnumerable(Of String))
references:
- uid: Infrastructure.Repositories
  commentId: N:Infrastructure.Repositories
  href: Infrastructure.html
  name: Infrastructure.Repositories
  nameWithType: Infrastructure.Repositories
  fullName: Infrastructure.Repositories
  spec.csharp:
  - uid: Infrastructure
    name: Infrastructure
    href: Infrastructure.html
  - name: .
  - uid: Infrastructure.Repositories
    name: Repositories
    href: Infrastructure.Repositories.html
  spec.vb:
  - uid: Infrastructure
    name: Infrastructure
    href: Infrastructure.html
  - name: .
  - uid: Infrastructure.Repositories
    name: Repositories
    href: Infrastructure.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  commentId: T:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  parent: Infrastructure.Repositories.BaseRepository
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  name: BaseRepository<Tag>
  nameWithType: BaseRepository<Tag>
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>
  nameWithType.vb: BaseRepository(Of Tag)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag)
  name.vb: BaseRepository(Of Tag)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: '>'
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
- uid: Domain.Repositories.ITagRepository
  commentId: T:Domain.Repositories.ITagRepository
  parent: Domain.Repositories
  href: Domain.Repositories.ITagRepository.html
  name: ITagRepository
  nameWithType: ITagRepository
  fullName: Domain.Repositories.ITagRepository
- uid: Domain.Repositories.RepositoryBase.IBaseRepository{Domain.Entities.EntityLookup.Tag}
  commentId: T:Domain.Repositories.RepositoryBase.IBaseRepository{Domain.Entities.EntityLookup.Tag}
  parent: Domain.Repositories.RepositoryBase
  definition: Domain.Repositories.RepositoryBase.IBaseRepository`1
  href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  name: IBaseRepository<Tag>
  nameWithType: IBaseRepository<Tag>
  fullName: Domain.Repositories.RepositoryBase.IBaseRepository<Domain.Entities.EntityLookup.Tag>
  nameWithType.vb: IBaseRepository(Of Tag)
  fullName.vb: Domain.Repositories.RepositoryBase.IBaseRepository(Of Domain.Entities.EntityLookup.Tag)
  name.vb: IBaseRepository(Of Tag)
  spec.csharp:
  - uid: Domain.Repositories.RepositoryBase.IBaseRepository`1
    name: IBaseRepository
    href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
    href: Domain.Entities.EntityLookup.Tag.html
  - name: '>'
  spec.vb:
  - uid: Domain.Repositories.RepositoryBase.IBaseRepository`1
    name: IBaseRepository
    href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
    href: Domain.Entities.EntityLookup.Tag.html
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._db
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._db
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1._db
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__db
  name: _db
  nameWithType: BaseRepository<Tag>._db
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>._db
  nameWithType.vb: BaseRepository(Of Tag)._db
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag)._db
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collection
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collection
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1._collection
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__collection
  name: _collection
  nameWithType: BaseRepository<Tag>._collection
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>._collection
  nameWithType.vb: BaseRepository(Of Tag)._collection
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag)._collection
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collectionName
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}._collectionName
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1._collectionName
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__collectionName
  name: _collectionName
  nameWithType: BaseRepository<Tag>._collectionName
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>._collectionName
  nameWithType.vb: BaseRepository(Of Tag)._collectionName
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag)._collectionName
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(Domain.Entities.EntityLookup.Tag)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(Domain.Entities.EntityLookup.Tag)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(`0)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  name: Insert(Tag)
  nameWithType: BaseRepository<Tag>.Insert(Tag)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Insert(Domain.Entities.EntityLookup.Tag)
  nameWithType.vb: BaseRepository(Of Tag).Insert(Tag)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Insert(Domain.Entities.EntityLookup.Tag)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(Domain.Entities.EntityLookup.Tag)
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  - name: (
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(Domain.Entities.EntityLookup.Tag)
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  - name: (
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0})
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  name: Insert(IEnumerable<Tag>)
  nameWithType: BaseRepository<Tag>.Insert(IEnumerable<Tag>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Insert(System.Collections.Generic.IEnumerable<Domain.Entities.EntityLookup.Tag>)
  nameWithType.vb: BaseRepository(Of Tag).Insert(IEnumerable(Of Tag))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Insert(System.Collections.Generic.IEnumerable(Of Domain.Entities.EntityLookup.Tag))
  name.vb: Insert(IEnumerable(Of Tag))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Insert(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(Domain.Entities.EntityLookup.Tag)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(Domain.Entities.EntityLookup.Tag)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(`0)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  name: Update(Tag)
  nameWithType: BaseRepository<Tag>.Update(Tag)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Update(Domain.Entities.EntityLookup.Tag)
  nameWithType.vb: BaseRepository(Of Tag).Update(Tag)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Update(Domain.Entities.EntityLookup.Tag)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(Domain.Entities.EntityLookup.Tag)
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  - name: (
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(Domain.Entities.EntityLookup.Tag)
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  - name: (
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteById(System.Guid)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteById(System.Guid)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteById(System.Guid)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  name: DeleteById(Guid)
  nameWithType: BaseRepository<Tag>.DeleteById(Guid)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.DeleteById(System.Guid)
  nameWithType.vb: BaseRepository(Of Tag).DeleteById(Guid)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).DeleteById(System.Guid)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteById(System.Guid)
    name: DeleteById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteById(System.Guid)
    name: DeleteById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteAll
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteAll
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteAll
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  name: DeleteAll()
  nameWithType: BaseRepository<Tag>.DeleteAll()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.DeleteAll()
  nameWithType.vb: BaseRepository(Of Tag).DeleteAll()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).DeleteAll()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteAll
    name: DeleteAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.DeleteAll
    name: DeleteAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetById(System.Guid)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetById(System.Guid)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetById(System.Guid)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  name: GetById(Guid)
  nameWithType: BaseRepository<Tag>.GetById(Guid)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetById(System.Guid)
  nameWithType.vb: BaseRepository(Of Tag).GetById(Guid)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetById(System.Guid)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetById(System.Guid)
    name: GetById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetById(System.Guid)
    name: GetById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  name: GetAll()
  nameWithType: BaseRepository<Tag>.GetAll()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetAll()
  nameWithType.vb: BaseRepository(Of Tag).GetAll()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetAll()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  name: GetAll(Func<Tag, bool>, int, int)
  nameWithType: BaseRepository<Tag>.GetAll(Func<Tag, bool>, int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetAll(System.Func<Domain.Entities.EntityLookup.Tag, bool>, int, int)
  nameWithType.vb: BaseRepository(Of Tag).GetAll(Func(Of Tag, Boolean), Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetAll(System.Func(Of Domain.Entities.EntityLookup.Tag, Boolean), Integer, Integer)
  name.vb: GetAll(Func(Of Tag, Boolean), Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean})
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  name: GetAll(Func<Tag, bool>)
  nameWithType: BaseRepository<Tag>.GetAll(Func<Tag, bool>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetAll(System.Func<Domain.Entities.EntityLookup.Tag, bool>)
  nameWithType.vb: BaseRepository(Of Tag).GetAll(Func(Of Tag, Boolean))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetAll(System.Func(Of Domain.Entities.EntityLookup.Tag, Boolean))
  name.vb: GetAll(Func(Of Tag, Boolean))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAllAsync(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAllAsync(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAllAsync(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  name: GetAllAsync(Func<Tag, bool>, int, int)
  nameWithType: BaseRepository<Tag>.GetAllAsync(Func<Tag, bool>, int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetAllAsync(System.Func<Domain.Entities.EntityLookup.Tag, bool>, int, int)
  nameWithType.vb: BaseRepository(Of Tag).GetAllAsync(Func(Of Tag, Boolean), Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetAllAsync(System.Func(Of Domain.Entities.EntityLookup.Tag, Boolean), Integer, Integer)
  name.vb: GetAllAsync(Func(Of Tag, Boolean), Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAllAsync(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
    name: GetAllAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAllAsync(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean},System.Int32,System.Int32)
    name: GetAllAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Int32,System.Int32)
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Int32,System.Int32)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  name: GetAll(int, int)
  nameWithType: BaseRepository<Tag>.GetAll(int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetAll(int, int)
  nameWithType.vb: BaseRepository(Of Tag).GetAll(Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetAll(Integer, Integer)
  name.vb: GetAll(Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetAll(System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetCollection
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetCollection
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetCollection
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  name: GetCollection()
  nameWithType: BaseRepository<Tag>.GetCollection()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.GetCollection()
  nameWithType.vb: BaseRepository(Of Tag).GetCollection()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).GetCollection()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetCollection
    name: GetCollection
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.GetCollection
    name: GetCollection
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Count
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Count
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Count
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  name: Count()
  nameWithType: BaseRepository<Tag>.Count()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Count()
  nameWithType.vb: BaseRepository(Of Tag).Count()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Count()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Count
    name: Count
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Count
    name: Count
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountBy(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountBy(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountBy(System.Func{`0,System.Boolean})
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  name: CountBy(Func<Tag, bool>)
  nameWithType: BaseRepository<Tag>.CountBy(Func<Tag, bool>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.CountBy(System.Func<Domain.Entities.EntityLookup.Tag, bool>)
  nameWithType.vb: BaseRepository(Of Tag).CountBy(Func(Of Tag, Boolean))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).CountBy(System.Func(Of Domain.Entities.EntityLookup.Tag, Boolean))
  name.vb: CountBy(Func(Of Tag, Boolean))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountBy(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
    name: CountBy
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountBy(System.Func{Domain.Entities.EntityLookup.Tag,System.Boolean})
    name: CountBy
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountAsync
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountAsync
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountAsync
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  name: CountAsync()
  nameWithType: BaseRepository<Tag>.CountAsync()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.CountAsync()
  nameWithType.vb: BaseRepository(Of Tag).CountAsync()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).CountAsync()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountAsync
    name: CountAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.CountAsync
    name: CountAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0})
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  name: Update(IEnumerable<Tag>)
  nameWithType: BaseRepository<Tag>.Update(IEnumerable<Tag>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Update(System.Collections.Generic.IEnumerable<Domain.Entities.EntityLookup.Tag>)
  nameWithType.vb: BaseRepository(Of Tag).Update(IEnumerable(Of Tag))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Update(System.Collections.Generic.IEnumerable(Of Domain.Entities.EntityLookup.Tag))
  name.vb: Update(IEnumerable(Of Tag))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Update(System.Collections.Generic.IEnumerable{Domain.Entities.EntityLookup.Tag})
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Entities.EntityLookup.Tag
    name: Tag
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Dispose
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Dispose
  parent: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}
  definition: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Dispose
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  name: Dispose()
  nameWithType: BaseRepository<Tag>.Dispose()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<Domain.Entities.EntityLookup.Tag>.Dispose()
  nameWithType.vb: BaseRepository(Of Tag).Dispose()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of Domain.Entities.EntityLookup.Tag).Dispose()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Dispose
    name: Dispose
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository{Domain.Entities.EntityLookup.Tag}.Dispose
    name: Dispose
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  - name: (
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1
  commentId: T:Infrastructure.Repositories.BaseRepository.BaseRepository`1
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  name: BaseRepository<T>
  nameWithType: BaseRepository<T>
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>
  nameWithType.vb: BaseRepository(Of T)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T)
  name.vb: BaseRepository(Of T)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Infrastructure.Repositories.BaseRepository
  commentId: N:Infrastructure.Repositories.BaseRepository
  href: Infrastructure.html
  name: Infrastructure.Repositories.BaseRepository
  nameWithType: Infrastructure.Repositories.BaseRepository
  fullName: Infrastructure.Repositories.BaseRepository
  spec.csharp:
  - uid: Infrastructure
    name: Infrastructure
    href: Infrastructure.html
  - name: .
  - uid: Infrastructure.Repositories
    name: Repositories
    href: Infrastructure.Repositories.html
  - name: .
  - uid: Infrastructure.Repositories.BaseRepository
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.html
  spec.vb:
  - uid: Infrastructure
    name: Infrastructure
    href: Infrastructure.html
  - name: .
  - uid: Infrastructure.Repositories
    name: Repositories
    href: Infrastructure.Repositories.html
  - name: .
  - uid: Infrastructure.Repositories.BaseRepository
    name: BaseRepository
    href: Infrastructure.Repositories.BaseRepository.html
- uid: Domain.Repositories
  commentId: N:Domain.Repositories
  href: Domain.html
  name: Domain.Repositories
  nameWithType: Domain.Repositories
  fullName: Domain.Repositories
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Repositories
    name: Repositories
    href: Domain.Repositories.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Repositories
    name: Repositories
    href: Domain.Repositories.html
- uid: Domain.Repositories.RepositoryBase.IBaseRepository`1
  commentId: T:Domain.Repositories.RepositoryBase.IBaseRepository`1
  href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  name: IBaseRepository<T>
  nameWithType: IBaseRepository<T>
  fullName: Domain.Repositories.RepositoryBase.IBaseRepository<T>
  nameWithType.vb: IBaseRepository(Of T)
  fullName.vb: Domain.Repositories.RepositoryBase.IBaseRepository(Of T)
  name.vb: IBaseRepository(Of T)
  spec.csharp:
  - uid: Domain.Repositories.RepositoryBase.IBaseRepository`1
    name: IBaseRepository
    href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Domain.Repositories.RepositoryBase.IBaseRepository`1
    name: IBaseRepository
    href: Domain.Repositories.RepositoryBase.IBaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Domain.Repositories.RepositoryBase
  commentId: N:Domain.Repositories.RepositoryBase
  href: Domain.html
  name: Domain.Repositories.RepositoryBase
  nameWithType: Domain.Repositories.RepositoryBase
  fullName: Domain.Repositories.RepositoryBase
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Repositories
    name: Repositories
    href: Domain.Repositories.html
  - name: .
  - uid: Domain.Repositories.RepositoryBase
    name: RepositoryBase
    href: Domain.Repositories.RepositoryBase.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Repositories
    name: Repositories
    href: Domain.Repositories.html
  - name: .
  - uid: Domain.Repositories.RepositoryBase
    name: RepositoryBase
    href: Domain.Repositories.RepositoryBase.html
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1._db
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository`1._db
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__db
  name: _db
  nameWithType: BaseRepository<T>._db
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>._db
  nameWithType.vb: BaseRepository(Of T)._db
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T)._db
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1._collection
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository`1._collection
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__collection
  name: _collection
  nameWithType: BaseRepository<T>._collection
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>._collection
  nameWithType.vb: BaseRepository(Of T)._collection
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T)._collection
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1._collectionName
  commentId: F:Infrastructure.Repositories.BaseRepository.BaseRepository`1._collectionName
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1__collectionName
  name: _collectionName
  nameWithType: BaseRepository<T>._collectionName
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>._collectionName
  nameWithType.vb: BaseRepository(Of T)._collectionName
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T)._collectionName
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(`0)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(`0)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  name: Insert(T)
  nameWithType: BaseRepository<T>.Insert(T)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Insert(T)
  nameWithType.vb: BaseRepository(Of T).Insert(T)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Insert(T)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(`0)
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(`0)
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert__0_
  - name: (
  - name: T
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  name: Insert(IEnumerable<T>)
  nameWithType: BaseRepository<T>.Insert(IEnumerable<T>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Insert(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseRepository(Of T).Insert(IEnumerable(Of T))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Insert(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Insert(IEnumerable(Of T))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0})
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0})
    name: Insert
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Insert_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(`0)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(`0)
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  name: Update(T)
  nameWithType: BaseRepository<T>.Update(T)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Update(T)
  nameWithType.vb: BaseRepository(Of T).Update(T)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Update(T)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(`0)
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(`0)
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update__0_
  - name: (
  - name: T
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteById(System.Guid)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteById(System.Guid)
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  name: DeleteById(Guid)
  nameWithType: BaseRepository<T>.DeleteById(Guid)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.DeleteById(System.Guid)
  nameWithType.vb: BaseRepository(Of T).DeleteById(Guid)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).DeleteById(System.Guid)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteById(System.Guid)
    name: DeleteById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteById(System.Guid)
    name: DeleteById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteAll
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteAll
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  name: DeleteAll()
  nameWithType: BaseRepository<T>.DeleteAll()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.DeleteAll()
  nameWithType.vb: BaseRepository(Of T).DeleteAll()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).DeleteAll()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteAll
    name: DeleteAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.DeleteAll
    name: DeleteAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_DeleteAll
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetById(System.Guid)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetById(System.Guid)
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  name: GetById(Guid)
  nameWithType: BaseRepository<T>.GetById(Guid)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetById(System.Guid)
  nameWithType.vb: BaseRepository(Of T).GetById(Guid)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetById(System.Guid)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetById(System.Guid)
    name: GetById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetById(System.Guid)
    name: GetById
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetById_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  name: GetAll()
  nameWithType: BaseRepository<T>.GetAll()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetAll()
  nameWithType.vb: BaseRepository(Of T).GetAll()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetAll()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  name: GetAll(Func<T, bool>, int, int)
  nameWithType: BaseRepository<T>.GetAll(Func<T, bool>, int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetAll(System.Func<T, bool>, int, int)
  nameWithType.vb: BaseRepository(Of T).GetAll(Func(Of T, Boolean), Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetAll(System.Func(Of T, Boolean), Integer, Integer)
  name.vb: GetAll(Func(Of T, Boolean), Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean},System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean},System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean})
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  name: GetAll(Func<T, bool>)
  nameWithType: BaseRepository<T>.GetAll(Func<T, bool>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetAll(System.Func<T, bool>)
  nameWithType.vb: BaseRepository(Of T).GetAll(Func(Of T, Boolean))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetAll(System.Func(Of T, Boolean))
  name.vb: GetAll(Func(Of T, Boolean))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean})
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Func{`0,System.Boolean})
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAllAsync(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAllAsync(System.Func{`0,System.Boolean},System.Int32,System.Int32)
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  name: GetAllAsync(Func<T, bool>, int, int)
  nameWithType: BaseRepository<T>.GetAllAsync(Func<T, bool>, int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetAllAsync(System.Func<T, bool>, int, int)
  nameWithType.vb: BaseRepository(Of T).GetAllAsync(Func(Of T, Boolean), Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetAllAsync(System.Func(Of T, Boolean), Integer, Integer)
  name.vb: GetAllAsync(Func(Of T, Boolean), Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAllAsync(System.Func{`0,System.Boolean},System.Int32,System.Int32)
    name: GetAllAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAllAsync(System.Func{`0,System.Boolean},System.Int32,System.Int32)
    name: GetAllAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAllAsync_System_Func__0_System_Boolean__System_Int32_System_Int32_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Int32,System.Int32)
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Int32,System.Int32)
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  name: GetAll(int, int)
  nameWithType: BaseRepository<T>.GetAll(int, int)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetAll(int, int)
  nameWithType.vb: BaseRepository(Of T).GetAll(Integer, Integer)
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetAll(Integer, Integer)
  name.vb: GetAll(Integer, Integer)
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetAll(System.Int32,System.Int32)
    name: GetAll
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetAll_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetCollection
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetCollection
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  name: GetCollection()
  nameWithType: BaseRepository<T>.GetCollection()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.GetCollection()
  nameWithType.vb: BaseRepository(Of T).GetCollection()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).GetCollection()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetCollection
    name: GetCollection
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.GetCollection
    name: GetCollection
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_GetCollection
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Count
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Count
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  name: Count()
  nameWithType: BaseRepository<T>.Count()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Count()
  nameWithType.vb: BaseRepository(Of T).Count()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Count()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Count
    name: Count
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Count
    name: Count
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Count
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountBy(System.Func{`0,System.Boolean})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountBy(System.Func{`0,System.Boolean})
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  name: CountBy(Func<T, bool>)
  nameWithType: BaseRepository<T>.CountBy(Func<T, bool>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.CountBy(System.Func<T, bool>)
  nameWithType.vb: BaseRepository(Of T).CountBy(Func(Of T, Boolean))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).CountBy(System.Func(Of T, Boolean))
  name.vb: CountBy(Func(Of T, Boolean))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountBy(System.Func{`0,System.Boolean})
    name: CountBy
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountBy(System.Func{`0,System.Boolean})
    name: CountBy
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountBy_System_Func__0_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountAsync
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountAsync
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  name: CountAsync()
  nameWithType: BaseRepository<T>.CountAsync()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.CountAsync()
  nameWithType.vb: BaseRepository(Of T).CountAsync()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).CountAsync()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountAsync
    name: CountAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.CountAsync
    name: CountAsync
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_CountAsync
  - name: (
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  name: Update(IEnumerable<T>)
  nameWithType: BaseRepository<T>.Update(IEnumerable<T>)
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Update(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: BaseRepository(Of T).Update(IEnumerable(Of T))
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Update(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Update(IEnumerable(Of T))
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0})
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0})
    name: Update
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Update_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Dispose
  commentId: M:Infrastructure.Repositories.BaseRepository.BaseRepository`1.Dispose
  href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  name: Dispose()
  nameWithType: BaseRepository<T>.Dispose()
  fullName: Infrastructure.Repositories.BaseRepository.BaseRepository<T>.Dispose()
  nameWithType.vb: BaseRepository(Of T).Dispose()
  fullName.vb: Infrastructure.Repositories.BaseRepository.BaseRepository(Of T).Dispose()
  spec.csharp:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Dispose
    name: Dispose
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Infrastructure.Repositories.BaseRepository.BaseRepository`1.Dispose
    name: Dispose
    href: Infrastructure.Repositories.BaseRepository.BaseRepository-1.html#Infrastructure_Repositories_BaseRepository_BaseRepository_1_Dispose
  - name: (
  - name: )
- uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention
  commentId: T:Domain.Extentions.ObjectExtention
  parent: Domain.Extentions
  href: Domain.Extentions.ObjectExtention.html
  name: ObjectExtention
  nameWithType: ObjectExtention
  fullName: Domain.Extentions.ObjectExtention
- uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: Infrastructure.Repositories.TagRepository.#ctor*
  commentId: Overload:Infrastructure.Repositories.TagRepository.#ctor
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository__ctor_System_String_
  name: TagRepository
  nameWithType: TagRepository.TagRepository
  fullName: Infrastructure.Repositories.TagRepository.TagRepository
  nameWithType.vb: TagRepository.New
  fullName.vb: Infrastructure.Repositories.TagRepository.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Infrastructure.Repositories.TagRepository.IsExist*
  commentId: Overload:Infrastructure.Repositories.TagRepository.IsExist
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_IsExist_System_String_
  name: IsExist
  nameWithType: TagRepository.IsExist
  fullName: Infrastructure.Repositories.TagRepository.IsExist
- uid: Domain.Repositories.ITagRepository.IsExist(System.String)
  commentId: M:Domain.Repositories.ITagRepository.IsExist(System.String)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsExist(string)
  nameWithType: ITagRepository.IsExist(string)
  fullName: Domain.Repositories.ITagRepository.IsExist(string)
  nameWithType.vb: ITagRepository.IsExist(String)
  fullName.vb: Domain.Repositories.ITagRepository.IsExist(String)
  name.vb: IsExist(String)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.String)
    name: IsExist
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.String)
    name: IsExist
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Domain.Repositories.ITagRepository.IsExist(System.String,System.Guid)
  commentId: M:Domain.Repositories.ITagRepository.IsExist(System.String,System.Guid)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsExist(string, Guid)
  nameWithType: ITagRepository.IsExist(string, Guid)
  fullName: Domain.Repositories.ITagRepository.IsExist(string, System.Guid)
  nameWithType.vb: ITagRepository.IsExist(String, Guid)
  fullName.vb: Domain.Repositories.ITagRepository.IsExist(String, System.Guid)
  name.vb: IsExist(String, Guid)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.String,System.Guid)
    name: IsExist
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.String,System.Guid)
    name: IsExist
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Domain.Repositories.ITagRepository.IsExist(System.Guid)
  commentId: M:Domain.Repositories.ITagRepository.IsExist(System.Guid)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: IsExist(Guid)
  nameWithType: ITagRepository.IsExist(Guid)
  fullName: Domain.Repositories.ITagRepository.IsExist(System.Guid)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.Guid)
    name: IsExist
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.Guid)
    name: IsExist
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsExist(IEnumerable<Guid>)
  nameWithType: ITagRepository.IsExist(IEnumerable<Guid>)
  fullName: Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ITagRepository.IsExist(IEnumerable(Of Guid))
  fullName.vb: Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: IsExist(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
    name: IsExist
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsExist(System.Collections.Generic.IEnumerable{System.Guid})
    name: IsExist
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Infrastructure.Repositories.TagRepository.IsNotExist*
  commentId: Overload:Infrastructure.Repositories.TagRepository.IsNotExist
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_IsNotExist_System_Guid_
  name: IsNotExist
  nameWithType: TagRepository.IsNotExist
  fullName: Infrastructure.Repositories.TagRepository.IsNotExist
- uid: Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
  commentId: M:Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: IsNotExist(Guid)
  nameWithType: ITagRepository.IsNotExist(Guid)
  fullName: Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
    name: IsNotExist
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsNotExist(System.Guid)
    name: IsNotExist
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsNotExist(IEnumerable<Guid>)
  nameWithType: ITagRepository.IsNotExist(IEnumerable<Guid>)
  fullName: Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ITagRepository.IsNotExist(IEnumerable(Of Guid))
  fullName.vb: Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: IsNotExist(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
    name: IsNotExist
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.IsNotExist(System.Collections.Generic.IEnumerable{System.Guid})
    name: IsNotExist
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  - name: )
- uid: Infrastructure.Repositories.TagRepository.GetNotFoundTags*
  commentId: Overload:Infrastructure.Repositories.TagRepository.GetNotFoundTags
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_GetNotFoundTags_System_Collections_Generic_IEnumerable_System_Guid__
  name: GetNotFoundTags
  nameWithType: TagRepository.GetNotFoundTags
  fullName: Infrastructure.Repositories.TagRepository.GetNotFoundTags
- uid: Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetNotFoundTags(IEnumerable<Guid>)
  nameWithType: ITagRepository.GetNotFoundTags(IEnumerable<Guid>)
  fullName: Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable<System.Guid>)
  nameWithType.vb: ITagRepository.GetNotFoundTags(IEnumerable(Of Guid))
  fullName.vb: Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: GetNotFoundTags(IEnumerable(Of Guid))
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
    name: GetNotFoundTags
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.GetNotFoundTags(System.Collections.Generic.IEnumerable{System.Guid})
    name: GetNotFoundTags
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  - name: )
- uid: Infrastructure.Repositories.TagRepository.GetTagsReference*
  commentId: Overload:Infrastructure.Repositories.TagRepository.GetTagsReference
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_GetTagsReference_System_Collections_Generic_IEnumerable_System_String__
  name: GetTagsReference
  nameWithType: TagRepository.GetTagsReference
  fullName: Infrastructure.Repositories.TagRepository.GetTagsReference
- uid: Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetTagsReference(IEnumerable<string>)
  nameWithType: ITagRepository.GetTagsReference(IEnumerable<string>)
  fullName: Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable<string>)
  nameWithType.vb: ITagRepository.GetTagsReference(IEnumerable(Of String))
  fullName.vb: Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable(Of String))
  name.vb: GetTagsReference(IEnumerable(Of String))
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
    name: GetTagsReference
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.GetTagsReference(System.Collections.Generic.IEnumerable{System.String})
    name: GetTagsReference
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Infrastructure.Repositories.TagRepository.GetTagReference*
  commentId: Overload:Infrastructure.Repositories.TagRepository.GetTagReference
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_GetTagReference_System_String_
  name: GetTagReference
  nameWithType: TagRepository.GetTagReference
  fullName: Infrastructure.Repositories.TagRepository.GetTagReference
- uid: Domain.Repositories.ITagRepository.GetTagReference(System.String)
  commentId: M:Domain.Repositories.ITagRepository.GetTagReference(System.String)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetTagReference(string)
  nameWithType: ITagRepository.GetTagReference(string)
  fullName: Domain.Repositories.ITagRepository.GetTagReference(string)
  nameWithType.vb: ITagRepository.GetTagReference(String)
  fullName.vb: Domain.Repositories.ITagRepository.GetTagReference(String)
  name.vb: GetTagReference(String)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.GetTagReference(System.String)
    name: GetTagReference
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.GetTagReference(System.String)
    name: GetTagReference
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Infrastructure.Repositories.TagRepository.ArchiveTag*
  commentId: Overload:Infrastructure.Repositories.TagRepository.ArchiveTag
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_ArchiveTag_System_Guid_
  name: ArchiveTag
  nameWithType: TagRepository.ArchiveTag
  fullName: Infrastructure.Repositories.TagRepository.ArchiveTag
- uid: Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
  commentId: M:Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: ArchiveTag(Guid)
  nameWithType: ITagRepository.ArchiveTag(Guid)
  fullName: Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
    name: ArchiveTag
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.ArchiveTag(System.Guid)
    name: ArchiveTag
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.TagRepository.UnArchiveTag*
  commentId: Overload:Infrastructure.Repositories.TagRepository.UnArchiveTag
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_UnArchiveTag_System_Guid_
  name: UnArchiveTag
  nameWithType: TagRepository.UnArchiveTag
  fullName: Infrastructure.Repositories.TagRepository.UnArchiveTag
- uid: Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
  commentId: M:Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: UnArchiveTag(Guid)
  nameWithType: ITagRepository.UnArchiveTag(Guid)
  fullName: Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
    name: UnArchiveTag
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.UnArchiveTag(System.Guid)
    name: UnArchiveTag
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: Infrastructure.Repositories.TagRepository.GetAllAvailableTags*
  commentId: Overload:Infrastructure.Repositories.TagRepository.GetAllAvailableTags
  href: Infrastructure.Repositories.TagRepository.html#Infrastructure_Repositories_TagRepository_GetAllAvailableTags_System_Collections_Generic_IEnumerable_System_String__
  name: GetAllAvailableTags
  nameWithType: TagRepository.GetAllAvailableTags
  fullName: Infrastructure.Repositories.TagRepository.GetAllAvailableTags
- uid: Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
  parent: Domain.Repositories.ITagRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetAllAvailableTags(IEnumerable<string>)
  nameWithType: ITagRepository.GetAllAvailableTags(IEnumerable<string>)
  fullName: Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable<string>)
  nameWithType.vb: ITagRepository.GetAllAvailableTags(IEnumerable(Of String))
  fullName.vb: Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable(Of String))
  name.vb: GetAllAvailableTags(IEnumerable(Of String))
  spec.csharp:
  - uid: Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
    name: GetAllAvailableTags
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Domain.Repositories.ITagRepository.GetAllAvailableTags(System.Collections.Generic.IEnumerable{System.String})
    name: GetAllAvailableTags
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
