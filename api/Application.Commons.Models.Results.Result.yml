### YamlMime:ManagedReference
items:
- uid: Application.Commons.Models.Results.Result
  commentId: T:Application.Commons.Models.Results.Result
  id: Result
  parent: Application.Commons.Models.Results
  children:
  - Application.Commons.Models.Results.Result.AddError(System.String,System.String)
  - Application.Commons.Models.Results.Result.ConflictFailure(System.String,System.String)
  - Application.Commons.Models.Results.Result.Errors
  - Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]})
  - Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Net.HttpStatusCode)
  - Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String},System.Net.HttpStatusCode)
  - Application.Commons.Models.Results.Result.Failure(System.String,System.String)
  - Application.Commons.Models.Results.Result.Failure(System.String,System.String,System.Net.HttpStatusCode)
  - Application.Commons.Models.Results.Result.IsSuccess
  - Application.Commons.Models.Results.Result.NoContentSuccess
  - Application.Commons.Models.Results.Result.NotFoundFailure(System.String,System.String)
  - Application.Commons.Models.Results.Result.StatusCode
  - Application.Commons.Models.Results.Result.Success
  - Application.Commons.Models.Results.Result.Success(System.Net.HttpStatusCode)
  - Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.String)
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Result
  fullName: Application.Commons.Models.Results.Result
  type: Class
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Result
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 95
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public class Result
    content.vb: Public Class Result
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  - System.Object.Domain.Extentions.ObjectExtention.IsNull
- uid: Application.Commons.Models.Results.Result.IsSuccess
  commentId: P:Application.Commons.Models.Results.Result.IsSuccess
  id: IsSuccess
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: IsSuccess
  nameWithType: Result.IsSuccess
  fullName: Application.Commons.Models.Results.Result.IsSuccess
  type: Property
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IsSuccess
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 97
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public bool IsSuccess { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSuccess As Boolean
  overload: Application.Commons.Models.Results.Result.IsSuccess*
- uid: Application.Commons.Models.Results.Result.Errors
  commentId: P:Application.Commons.Models.Results.Result.Errors
  id: Errors
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: Result.Errors
  fullName: Application.Commons.Models.Results.Result.Errors
  type: Property
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Errors
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 98
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public Dictionary<string, string[]> Errors { get; init; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String[]}
    content.vb: Public Property Errors As Dictionary(Of String, String())
  overload: Application.Commons.Models.Results.Result.Errors*
- uid: Application.Commons.Models.Results.Result.StatusCode
  commentId: P:Application.Commons.Models.Results.Result.StatusCode
  id: StatusCode
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: Result.StatusCode
  fullName: Application.Commons.Models.Results.Result.StatusCode
  type: Property
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: StatusCode
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 99
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public HttpStatusCode StatusCode { get; set; }
    parameters: []
    return:
      type: System.Net.HttpStatusCode
    content.vb: Public Property StatusCode As HttpStatusCode
  overload: Application.Commons.Models.Results.Result.StatusCode*
- uid: Application.Commons.Models.Results.Result.Success
  commentId: M:Application.Commons.Models.Results.Result.Success
  id: Success
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Success()
  nameWithType: Result.Success()
  fullName: Application.Commons.Models.Results.Result.Success()
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Success
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 101
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Success()
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Success() As Result
  overload: Application.Commons.Models.Results.Result.Success*
- uid: Application.Commons.Models.Results.Result.Success(System.Net.HttpStatusCode)
  commentId: M:Application.Commons.Models.Results.Result.Success(System.Net.HttpStatusCode)
  id: Success(System.Net.HttpStatusCode)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Success(HttpStatusCode)
  nameWithType: Result.Success(HttpStatusCode)
  fullName: Application.Commons.Models.Results.Result.Success(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Success
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 107
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Success(HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Success(statusCode As HttpStatusCode) As Result
  overload: Application.Commons.Models.Results.Result.Success*
- uid: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]})
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]})
  id: Failure(System.Collections.Generic.Dictionary{System.String,System.String[]})
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(Dictionary<string, string[]>)
  nameWithType: Result.Failure(Dictionary<string, string[]>)
  fullName: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary<string, string[]>)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 113
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(Dictionary<string, string[]> errors)
    parameters:
    - id: errors
      type: System.Collections.Generic.Dictionary{System.String,System.String[]}
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(errors As Dictionary(Of String, String())) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(Dictionary(Of String, String()))
  fullName.vb: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary(Of String, String()))
  name.vb: Failure(Dictionary(Of String, String()))
- uid: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Net.HttpStatusCode)
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Net.HttpStatusCode)
  id: Failure(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Net.HttpStatusCode)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(Dictionary<string, string[]>, HttpStatusCode)
  nameWithType: Result.Failure(Dictionary<string, string[]>, HttpStatusCode)
  fullName: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary<string, string[]>, System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 119
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(Dictionary<string, string[]> errors, HttpStatusCode statusCode)
    parameters:
    - id: errors
      type: System.Collections.Generic.Dictionary{System.String,System.String[]}
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(errors As Dictionary(Of String, String()), statusCode As HttpStatusCode) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(Dictionary(Of String, String()), HttpStatusCode)
  fullName.vb: Application.Commons.Models.Results.Result.Failure(System.Collections.Generic.Dictionary(Of String, String()), System.Net.HttpStatusCode)
  name.vb: Failure(Dictionary(Of String, String()), HttpStatusCode)
- uid: Application.Commons.Models.Results.Result.Failure(System.String,System.String)
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.String,System.String)
  id: Failure(System.String,System.String)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(string, string)
  nameWithType: Result.Failure(string, string)
  fullName: Application.Commons.Models.Results.Result.Failure(string, string)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 126
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(string key, string error)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(key As String, [error] As String) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(String, String)
  fullName.vb: Application.Commons.Models.Results.Result.Failure(String, String)
  name.vb: Failure(String, String)
- uid: Application.Commons.Models.Results.Result.Failure(System.String,System.String,System.Net.HttpStatusCode)
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.String,System.String,System.Net.HttpStatusCode)
  id: Failure(System.String,System.String,System.Net.HttpStatusCode)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(string, string, HttpStatusCode)
  nameWithType: Result.Failure(string, string, HttpStatusCode)
  fullName: Application.Commons.Models.Results.Result.Failure(string, string, System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 132
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(string key, string error, HttpStatusCode statusCode)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(key As String, [error] As String, statusCode As HttpStatusCode) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(String, String, HttpStatusCode)
  fullName.vb: Application.Commons.Models.Results.Result.Failure(String, String, System.Net.HttpStatusCode)
  name.vb: Failure(String, String, HttpStatusCode)
- uid: Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Failure(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(string, IEnumerable<string>)
  nameWithType: Result.Failure(string, IEnumerable<string>)
  fullName: Application.Commons.Models.Results.Result.Failure(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 139
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(string key, IEnumerable<string> errors)
    parameters:
    - id: key
      type: System.String
    - id: errors
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(key As String, errors As IEnumerable(Of String)) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(String, IEnumerable(Of String))
  fullName.vb: Application.Commons.Models.Results.Result.Failure(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: Failure(String, IEnumerable(Of String))
- uid: Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String},System.Net.HttpStatusCode)
  commentId: M:Application.Commons.Models.Results.Result.Failure(System.String,System.Collections.Generic.IEnumerable{System.String},System.Net.HttpStatusCode)
  id: Failure(System.String,System.Collections.Generic.IEnumerable{System.String},System.Net.HttpStatusCode)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: Failure(string, IEnumerable<string>, HttpStatusCode)
  nameWithType: Result.Failure(string, IEnumerable<string>, HttpStatusCode)
  fullName: Application.Commons.Models.Results.Result.Failure(string, System.Collections.Generic.IEnumerable<string>, System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Failure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 145
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result Failure(string key, IEnumerable<string> errors, HttpStatusCode statusCode)
    parameters:
    - id: key
      type: System.String
    - id: errors
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function Failure(key As String, errors As IEnumerable(Of String), statusCode As HttpStatusCode) As Result
  overload: Application.Commons.Models.Results.Result.Failure*
  nameWithType.vb: Result.Failure(String, IEnumerable(Of String), HttpStatusCode)
  fullName.vb: Application.Commons.Models.Results.Result.Failure(String, System.Collections.Generic.IEnumerable(Of String), System.Net.HttpStatusCode)
  name.vb: Failure(String, IEnumerable(Of String), HttpStatusCode)
- uid: Application.Commons.Models.Results.Result.AddError(System.String,System.String)
  commentId: M:Application.Commons.Models.Results.Result.AddError(System.String,System.String)
  id: AddError(System.String,System.String)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: AddError(string, string)
  nameWithType: Result.AddError(string, string)
  fullName: Application.Commons.Models.Results.Result.AddError(string, string)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: AddError
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 152
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public Result AddError(string key, string error)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Function AddError(key As String, [error] As String) As Result
  overload: Application.Commons.Models.Results.Result.AddError*
  nameWithType.vb: Result.AddError(String, String)
  fullName.vb: Application.Commons.Models.Results.Result.AddError(String, String)
  name.vb: AddError(String, String)
- uid: Application.Commons.Models.Results.Result.NotFoundFailure(System.String,System.String)
  commentId: M:Application.Commons.Models.Results.Result.NotFoundFailure(System.String,System.String)
  id: NotFoundFailure(System.String,System.String)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: NotFoundFailure(string, string)
  nameWithType: Result.NotFoundFailure(string, string)
  fullName: Application.Commons.Models.Results.Result.NotFoundFailure(string, string)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: NotFoundFailure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 162
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result NotFoundFailure(string key, string error)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function NotFoundFailure(key As String, [error] As String) As Result
  overload: Application.Commons.Models.Results.Result.NotFoundFailure*
  nameWithType.vb: Result.NotFoundFailure(String, String)
  fullName.vb: Application.Commons.Models.Results.Result.NotFoundFailure(String, String)
  name.vb: NotFoundFailure(String, String)
- uid: Application.Commons.Models.Results.Result.ConflictFailure(System.String,System.String)
  commentId: M:Application.Commons.Models.Results.Result.ConflictFailure(System.String,System.String)
  id: ConflictFailure(System.String,System.String)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: ConflictFailure(string, string)
  nameWithType: Result.ConflictFailure(string, string)
  fullName: Application.Commons.Models.Results.Result.ConflictFailure(string, string)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: ConflictFailure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 165
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result ConflictFailure(string key, string error)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function ConflictFailure(key As String, [error] As String) As Result
  overload: Application.Commons.Models.Results.Result.ConflictFailure*
  nameWithType.vb: Result.ConflictFailure(String, String)
  fullName.vb: Application.Commons.Models.Results.Result.ConflictFailure(String, String)
  name.vb: ConflictFailure(String, String)
- uid: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.String)
  commentId: M:Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.String)
  id: UnprocessableEntityFailure(System.String,System.String)
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: UnprocessableEntityFailure(string, string)
  nameWithType: Result.UnprocessableEntityFailure(string, string)
  fullName: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(string, string)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: UnprocessableEntityFailure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 168
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result UnprocessableEntityFailure(string key, string error)
    parameters:
    - id: key
      type: System.String
    - id: error
      type: System.String
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function UnprocessableEntityFailure(key As String, [error] As String) As Result
  overload: Application.Commons.Models.Results.Result.UnprocessableEntityFailure*
  nameWithType.vb: Result.UnprocessableEntityFailure(String, String)
  fullName.vb: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(String, String)
  name.vb: UnprocessableEntityFailure(String, String)
- uid: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Application.Commons.Models.Results.Result.UnprocessableEntityFailure(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: UnprocessableEntityFailure(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: UnprocessableEntityFailure(string, IEnumerable<string>)
  nameWithType: Result.UnprocessableEntityFailure(string, IEnumerable<string>)
  fullName: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: UnprocessableEntityFailure
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 171
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result UnprocessableEntityFailure(string key, IEnumerable<string> errors)
    parameters:
    - id: key
      type: System.String
    - id: errors
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function UnprocessableEntityFailure(key As String, errors As IEnumerable(Of String)) As Result
  overload: Application.Commons.Models.Results.Result.UnprocessableEntityFailure*
  nameWithType.vb: Result.UnprocessableEntityFailure(String, IEnumerable(Of String))
  fullName.vb: Application.Commons.Models.Results.Result.UnprocessableEntityFailure(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: UnprocessableEntityFailure(String, IEnumerable(Of String))
- uid: Application.Commons.Models.Results.Result.NoContentSuccess
  commentId: M:Application.Commons.Models.Results.Result.NoContentSuccess
  id: NoContentSuccess
  parent: Application.Commons.Models.Results.Result
  langs:
  - csharp
  - vb
  name: NoContentSuccess()
  nameWithType: Result.NoContentSuccess()
  fullName: Application.Commons.Models.Results.Result.NoContentSuccess()
  type: Method
  source:
    remote:
      path: src/Application/Commons/Models/Results/Result.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: NoContentSuccess
    path: src/Application/Commons/Models/Results/Result.cs
    startLine: 174
  assemblies:
  - Application
  namespace: Application.Commons.Models.Results
  syntax:
    content: public static Result NoContentSuccess()
    return:
      type: Application.Commons.Models.Results.Result
    content.vb: Public Shared Function NoContentSuccess() As Result
  overload: Application.Commons.Models.Results.Result.NoContentSuccess*
references:
- uid: Application.Commons.Models.Results
  commentId: N:Application.Commons.Models.Results
  href: Application.html
  name: Application.Commons.Models.Results
  nameWithType: Application.Commons.Models.Results
  fullName: Application.Commons.Models.Results
  spec.csharp:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Models
    name: Models
    href: Application.Commons.Models.html
  - name: .
  - uid: Application.Commons.Models.Results
    name: Results
    href: Application.Commons.Models.Results.html
  spec.vb:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Models
    name: Models
    href: Application.Commons.Models.html
  - name: .
  - uid: Application.Commons.Models.Results
    name: Results
    href: Application.Commons.Models.Results.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention
  commentId: T:Domain.Extentions.ObjectExtention
  parent: Domain.Extentions
  href: Domain.Extentions.ObjectExtention.html
  name: ObjectExtention
  nameWithType: ObjectExtention
  fullName: Domain.Extentions.ObjectExtention
- uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: Application.Commons.Models.Results.Result.IsSuccess*
  commentId: Overload:Application.Commons.Models.Results.Result.IsSuccess
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_IsSuccess
  name: IsSuccess
  nameWithType: Result.IsSuccess
  fullName: Application.Commons.Models.Results.Result.IsSuccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Application.Commons.Models.Results.Result.Errors*
  commentId: Overload:Application.Commons.Models.Results.Result.Errors
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_Errors
  name: Errors
  nameWithType: Result.Errors
  fullName: Application.Commons.Models.Results.Result.Errors
- uid: System.Collections.Generic.Dictionary{System.String,System.String[]}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string[]>
  nameWithType: Dictionary<string, string[]>
  fullName: System.Collections.Generic.Dictionary<string, string[]>
  nameWithType.vb: Dictionary(Of String, String())
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String())
  name.vb: Dictionary(Of String, String())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Application.Commons.Models.Results.Result.StatusCode*
  commentId: Overload:Application.Commons.Models.Results.Result.StatusCode
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_StatusCode
  name: StatusCode
  nameWithType: Result.StatusCode
  fullName: Application.Commons.Models.Results.Result.StatusCode
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: Application.Commons.Models.Results.Result.Success*
  commentId: Overload:Application.Commons.Models.Results.Result.Success
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_Success
  name: Success
  nameWithType: Result.Success
  fullName: Application.Commons.Models.Results.Result.Success
- uid: Application.Commons.Models.Results.Result
  commentId: T:Application.Commons.Models.Results.Result
  parent: Application.Commons.Models.Results
  href: Application.Commons.Models.Results.Result.html
  name: Result
  nameWithType: Result
  fullName: Application.Commons.Models.Results.Result
- uid: Application.Commons.Models.Results.Result.Failure*
  commentId: Overload:Application.Commons.Models.Results.Result.Failure
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_Failure_System_Collections_Generic_Dictionary_System_String_System_String____
  name: Failure
  nameWithType: Result.Failure
  fullName: Application.Commons.Models.Results.Result.Failure
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Application.Commons.Models.Results.Result.AddError*
  commentId: Overload:Application.Commons.Models.Results.Result.AddError
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_AddError_System_String_System_String_
  name: AddError
  nameWithType: Result.AddError
  fullName: Application.Commons.Models.Results.Result.AddError
- uid: Application.Commons.Models.Results.Result.NotFoundFailure*
  commentId: Overload:Application.Commons.Models.Results.Result.NotFoundFailure
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_NotFoundFailure_System_String_System_String_
  name: NotFoundFailure
  nameWithType: Result.NotFoundFailure
  fullName: Application.Commons.Models.Results.Result.NotFoundFailure
- uid: Application.Commons.Models.Results.Result.ConflictFailure*
  commentId: Overload:Application.Commons.Models.Results.Result.ConflictFailure
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_ConflictFailure_System_String_System_String_
  name: ConflictFailure
  nameWithType: Result.ConflictFailure
  fullName: Application.Commons.Models.Results.Result.ConflictFailure
- uid: Application.Commons.Models.Results.Result.UnprocessableEntityFailure*
  commentId: Overload:Application.Commons.Models.Results.Result.UnprocessableEntityFailure
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_UnprocessableEntityFailure_System_String_System_String_
  name: UnprocessableEntityFailure
  nameWithType: Result.UnprocessableEntityFailure
  fullName: Application.Commons.Models.Results.Result.UnprocessableEntityFailure
- uid: Application.Commons.Models.Results.Result.NoContentSuccess*
  commentId: Overload:Application.Commons.Models.Results.Result.NoContentSuccess
  href: Application.Commons.Models.Results.Result.html#Application_Commons_Models_Results_Result_NoContentSuccess
  name: NoContentSuccess
  nameWithType: Result.NoContentSuccess
  fullName: Application.Commons.Models.Results.Result.NoContentSuccess
