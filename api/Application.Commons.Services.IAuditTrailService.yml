### YamlMime:ManagedReference
items:
- uid: Application.Commons.Services.IAuditTrailService
  commentId: T:Application.Commons.Services.IAuditTrailService
  id: IAuditTrailService
  parent: Application.Commons.Services
  children:
  - Application.Commons.Services.IAuditTrailService.AddNewEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  - Application.Commons.Services.IAuditTrailService.Count(System.Guid)
  - Application.Commons.Services.IAuditTrailService.CountDeletedEntity
  - Application.Commons.Services.IAuditTrailService.DeleteEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  - Application.Commons.Services.IAuditTrailService.GetDeletedEntities(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32)
  - Application.Commons.Services.IAuditTrailService.GetEntityTrail(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32,System.Guid)
  - Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails(System.Guid,Domain.Enums.EntityName,System.Guid)
  - Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk``1(Domain.Enums.EntityName,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}})
  - Application.Commons.Services.IAuditTrailService.UpdateEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: IAuditTrailService
  nameWithType: IAuditTrailService
  fullName: Application.Commons.Services.IAuditTrailService
  type: Interface
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: IAuditTrailService
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 5
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: public interface IAuditTrailService
    content.vb: Public Interface IAuditTrailService
  extensionMethods:
  - System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  - System.Object.Domain.Extentions.ObjectExtention.IsNull
- uid: Application.Commons.Services.IAuditTrailService.AddNewEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  commentId: M:Application.Commons.Services.IAuditTrailService.AddNewEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  id: AddNewEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: AddNewEntity<T>(EntityName, Guid, ActionBy, T, int, string?)
  nameWithType: IAuditTrailService.AddNewEntity<T>(EntityName, Guid, ActionBy, T, int, string?)
  fullName: Application.Commons.Services.IAuditTrailService.AddNewEntity<T>(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionBy, T, int, string?)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: AddNewEntity
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 7
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: void AddNewEntity<T>(EntityName entityName, Guid entityId, ActionBy actionBy, T entity, int versionNumber, string? comment = null)
    parameters:
    - id: entityName
      type: Domain.Enums.EntityName
    - id: entityId
      type: System.Guid
    - id: actionBy
      type: Domain.Enums.ActionBy
    - id: entity
      type: '{T}'
    - id: versionNumber
      type: System.Int32
    - id: comment
      type: System.String
    typeParameters:
    - id: T
    content.vb: Sub AddNewEntity(Of T)(entityName As EntityName, entityId As Guid, actionBy As ActionBy, entity As T, versionNumber As Integer, comment As String = Nothing)
  overload: Application.Commons.Services.IAuditTrailService.AddNewEntity*
  nameWithType.vb: IAuditTrailService.AddNewEntity(Of T)(EntityName, Guid, ActionBy, T, Integer, String)
  fullName.vb: Application.Commons.Services.IAuditTrailService.AddNewEntity(Of T)(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionBy, T, Integer, String)
  name.vb: AddNewEntity(Of T)(EntityName, Guid, ActionBy, T, Integer, String)
- uid: Application.Commons.Services.IAuditTrailService.UpdateEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String)
  commentId: M:Application.Commons.Services.IAuditTrailService.UpdateEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String)
  id: UpdateEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: UpdateEntity<T>(EntityName, Guid, ActionType, ActionBy, T, T, int, string?)
  nameWithType: IAuditTrailService.UpdateEntity<T>(EntityName, Guid, ActionType, ActionBy, T, T, int, string?)
  fullName: Application.Commons.Services.IAuditTrailService.UpdateEntity<T>(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionType, Domain.Enums.ActionBy, T, T, int, string?)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: UpdateEntity
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 8
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: void UpdateEntity<T>(EntityName entityName, Guid entityId, ActionType actionType, ActionBy actionBy, T oldEntity, T newEntity, int versionNumber, string? comment = null)
    parameters:
    - id: entityName
      type: Domain.Enums.EntityName
    - id: entityId
      type: System.Guid
    - id: actionType
      type: Domain.Enums.ActionType
    - id: actionBy
      type: Domain.Enums.ActionBy
    - id: oldEntity
      type: '{T}'
    - id: newEntity
      type: '{T}'
    - id: versionNumber
      type: System.Int32
    - id: comment
      type: System.String
    typeParameters:
    - id: T
    content.vb: Sub UpdateEntity(Of T)(entityName As EntityName, entityId As Guid, actionType As ActionType, actionBy As ActionBy, oldEntity As T, newEntity As T, versionNumber As Integer, comment As String = Nothing)
  overload: Application.Commons.Services.IAuditTrailService.UpdateEntity*
  nameWithType.vb: IAuditTrailService.UpdateEntity(Of T)(EntityName, Guid, ActionType, ActionBy, T, T, Integer, String)
  fullName.vb: Application.Commons.Services.IAuditTrailService.UpdateEntity(Of T)(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionType, Domain.Enums.ActionBy, T, T, Integer, String)
  name.vb: UpdateEntity(Of T)(EntityName, Guid, ActionType, ActionBy, T, T, Integer, String)
- uid: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk``1(Domain.Enums.EntityName,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}})
  commentId: M:Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk``1(Domain.Enums.EntityName,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}})
  id: UpdateEntitiesBulk``1(Domain.Enums.EntityName,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}})
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: UpdateEntitiesBulk<T>(EntityName, IEnumerable<(Guid EntityId, ActionType ActionType, ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string? Comment)>)
  nameWithType: IAuditTrailService.UpdateEntitiesBulk<T>(EntityName, IEnumerable<(Guid EntityId, ActionType ActionType, ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string? Comment)>)
  fullName: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk<T>(Domain.Enums.EntityName, System.Collections.Generic.IEnumerable<(System.Guid EntityId, Domain.Enums.ActionType ActionType, Domain.Enums.ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string? Comment)>)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: UpdateEntitiesBulk
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 9
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: void UpdateEntitiesBulk<T>(EntityName entityName, IEnumerable<(Guid EntityId, ActionType ActionType, ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string? Comment)> changes)
    parameters:
    - id: entityName
      type: Domain.Enums.EntityName
    - id: changes
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,{T},{T},System.Int32,System.String}}
    typeParameters:
    - id: T
    content.vb: Sub UpdateEntitiesBulk(Of T)(entityName As EntityName, changes As IEnumerable(Of (EntityId As Guid, ActionType As ActionType, ActionBy As ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String)))
  overload: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk*
  nameWithType.vb: IAuditTrailService.UpdateEntitiesBulk(Of T)(EntityName, IEnumerable(Of (EntityId As Guid, ActionType As ActionType, ActionBy As ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String)))
  fullName.vb: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk(Of T)(Domain.Enums.EntityName, System.Collections.Generic.IEnumerable(Of (EntityId As System.Guid, ActionType As Domain.Enums.ActionType, ActionBy As Domain.Enums.ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String)))
  name.vb: UpdateEntitiesBulk(Of T)(EntityName, IEnumerable(Of (EntityId As Guid, ActionType As ActionType, ActionBy As ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String)))
- uid: Application.Commons.Services.IAuditTrailService.GetEntityTrail(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32,System.Guid)
  commentId: M:Application.Commons.Services.IAuditTrailService.GetEntityTrail(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32,System.Guid)
  id: GetEntityTrail(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32,System.Guid)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: GetEntityTrail(Func<AuditTrail, bool>, int, int, Guid)
  nameWithType: IAuditTrailService.GetEntityTrail(Func<AuditTrail, bool>, int, int, Guid)
  fullName: Application.Commons.Services.IAuditTrailService.GetEntityTrail(System.Func<Domain.Auditing.AuditTrail, bool>, int, int, System.Guid)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetEntityTrail
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 10
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: IEnumerable<AuditTrail> GetEntityTrail(Func<AuditTrail, bool> func, int pageNumber, int pageSize, Guid entityId)
    parameters:
    - id: func
      type: System.Func{Domain.Auditing.AuditTrail,System.Boolean}
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    - id: entityId
      type: System.Guid
    return:
      type: System.Collections.Generic.IEnumerable{Domain.Auditing.AuditTrail}
    content.vb: Function GetEntityTrail(func As Func(Of AuditTrail, Boolean), pageNumber As Integer, pageSize As Integer, entityId As Guid) As IEnumerable(Of AuditTrail)
  overload: Application.Commons.Services.IAuditTrailService.GetEntityTrail*
  nameWithType.vb: IAuditTrailService.GetEntityTrail(Func(Of AuditTrail, Boolean), Integer, Integer, Guid)
  fullName.vb: Application.Commons.Services.IAuditTrailService.GetEntityTrail(System.Func(Of Domain.Auditing.AuditTrail, Boolean), Integer, Integer, System.Guid)
  name.vb: GetEntityTrail(Func(Of AuditTrail, Boolean), Integer, Integer, Guid)
- uid: Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails(System.Guid,Domain.Enums.EntityName,System.Guid)
  commentId: M:Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails(System.Guid,Domain.Enums.EntityName,System.Guid)
  id: GetEntityTrailDetails(System.Guid,Domain.Enums.EntityName,System.Guid)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: GetEntityTrailDetails(Guid, EntityName, Guid)
  nameWithType: IAuditTrailService.GetEntityTrailDetails(Guid, EntityName, Guid)
  fullName: Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails(System.Guid, Domain.Enums.EntityName, System.Guid)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetEntityTrailDetails
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 11
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: AuditTrail GetEntityTrailDetails(Guid trailId, EntityName entityName, Guid entityId)
    parameters:
    - id: trailId
      type: System.Guid
    - id: entityName
      type: Domain.Enums.EntityName
    - id: entityId
      type: System.Guid
    return:
      type: Domain.Auditing.AuditTrail
    content.vb: Function GetEntityTrailDetails(trailId As Guid, entityName As EntityName, entityId As Guid) As AuditTrail
  overload: Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails*
- uid: Application.Commons.Services.IAuditTrailService.DeleteEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  commentId: M:Application.Commons.Services.IAuditTrailService.DeleteEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  id: DeleteEntity``1(Domain.Enums.EntityName,System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,System.Int32,System.String)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: DeleteEntity<T>(EntityName, Guid, ActionType, ActionBy, T, int, string?)
  nameWithType: IAuditTrailService.DeleteEntity<T>(EntityName, Guid, ActionType, ActionBy, T, int, string?)
  fullName: Application.Commons.Services.IAuditTrailService.DeleteEntity<T>(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionType, Domain.Enums.ActionBy, T, int, string?)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: DeleteEntity
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 12
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: void DeleteEntity<T>(EntityName entityName, Guid entityId, ActionType actionType, ActionBy actionBy, T entity, int versionNumber, string? comment = null)
    parameters:
    - id: entityName
      type: Domain.Enums.EntityName
    - id: entityId
      type: System.Guid
    - id: actionType
      type: Domain.Enums.ActionType
    - id: actionBy
      type: Domain.Enums.ActionBy
    - id: entity
      type: '{T}'
    - id: versionNumber
      type: System.Int32
    - id: comment
      type: System.String
    typeParameters:
    - id: T
    content.vb: Sub DeleteEntity(Of T)(entityName As EntityName, entityId As Guid, actionType As ActionType, actionBy As ActionBy, entity As T, versionNumber As Integer, comment As String = Nothing)
  overload: Application.Commons.Services.IAuditTrailService.DeleteEntity*
  nameWithType.vb: IAuditTrailService.DeleteEntity(Of T)(EntityName, Guid, ActionType, ActionBy, T, Integer, String)
  fullName.vb: Application.Commons.Services.IAuditTrailService.DeleteEntity(Of T)(Domain.Enums.EntityName, System.Guid, Domain.Enums.ActionType, Domain.Enums.ActionBy, T, Integer, String)
  name.vb: DeleteEntity(Of T)(EntityName, Guid, ActionType, ActionBy, T, Integer, String)
- uid: Application.Commons.Services.IAuditTrailService.Count(System.Guid)
  commentId: M:Application.Commons.Services.IAuditTrailService.Count(System.Guid)
  id: Count(System.Guid)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: Count(Guid)
  nameWithType: IAuditTrailService.Count(Guid)
  fullName: Application.Commons.Services.IAuditTrailService.Count(System.Guid)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Count
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 13
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: int Count(Guid entityId)
    parameters:
    - id: entityId
      type: System.Guid
    return:
      type: System.Int32
    content.vb: Function Count(entityId As Guid) As Integer
  overload: Application.Commons.Services.IAuditTrailService.Count*
- uid: Application.Commons.Services.IAuditTrailService.GetDeletedEntities(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32)
  commentId: M:Application.Commons.Services.IAuditTrailService.GetDeletedEntities(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32)
  id: GetDeletedEntities(System.Func{Domain.Auditing.AuditTrail,System.Boolean},System.Int32,System.Int32)
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: GetDeletedEntities(Func<AuditTrail, bool>, int, int)
  nameWithType: IAuditTrailService.GetDeletedEntities(Func<AuditTrail, bool>, int, int)
  fullName: Application.Commons.Services.IAuditTrailService.GetDeletedEntities(System.Func<Domain.Auditing.AuditTrail, bool>, int, int)
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetDeletedEntities
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 14
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: IEnumerable<AuditTrail> GetDeletedEntities(Func<AuditTrail, bool> func, int pageNumber, int pageSize)
    parameters:
    - id: func
      type: System.Func{Domain.Auditing.AuditTrail,System.Boolean}
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Domain.Auditing.AuditTrail}
    content.vb: Function GetDeletedEntities(func As Func(Of AuditTrail, Boolean), pageNumber As Integer, pageSize As Integer) As IEnumerable(Of AuditTrail)
  overload: Application.Commons.Services.IAuditTrailService.GetDeletedEntities*
  nameWithType.vb: IAuditTrailService.GetDeletedEntities(Func(Of AuditTrail, Boolean), Integer, Integer)
  fullName.vb: Application.Commons.Services.IAuditTrailService.GetDeletedEntities(System.Func(Of Domain.Auditing.AuditTrail, Boolean), Integer, Integer)
  name.vb: GetDeletedEntities(Func(Of AuditTrail, Boolean), Integer, Integer)
- uid: Application.Commons.Services.IAuditTrailService.CountDeletedEntity
  commentId: M:Application.Commons.Services.IAuditTrailService.CountDeletedEntity
  id: CountDeletedEntity
  parent: Application.Commons.Services.IAuditTrailService
  langs:
  - csharp
  - vb
  name: CountDeletedEntity()
  nameWithType: IAuditTrailService.CountDeletedEntity()
  fullName: Application.Commons.Services.IAuditTrailService.CountDeletedEntity()
  type: Method
  source:
    remote:
      path: src/Application/Commons/Services/IAuditTrailService.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: CountDeletedEntity
    path: src/Application/Commons/Services/IAuditTrailService.cs
    startLine: 15
  assemblies:
  - Application
  namespace: Application.Commons.Services
  syntax:
    content: int CountDeletedEntity()
    return:
      type: System.Int32
    content.vb: Function CountDeletedEntity() As Integer
  overload: Application.Commons.Services.IAuditTrailService.CountDeletedEntity*
references:
- uid: Application.Commons.Services
  commentId: N:Application.Commons.Services
  href: Application.html
  name: Application.Commons.Services
  nameWithType: Application.Commons.Services
  fullName: Application.Commons.Services
  spec.csharp:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Services
    name: Services
    href: Application.Commons.Services.html
  spec.vb:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Services
    name: Services
    href: Application.Commons.Services.html
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention
  commentId: T:Domain.Extentions.ObjectExtention
  parent: Domain.Extentions
  href: Domain.Extentions.ObjectExtention.html
  name: ObjectExtention
  nameWithType: ObjectExtention
  fullName: Domain.Extentions.ObjectExtention
- uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: Application.Commons.Services.IAuditTrailService.AddNewEntity*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.AddNewEntity
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_AddNewEntity__1_Domain_Enums_EntityName_System_Guid_Domain_Enums_ActionBy___0_System_Int32_System_String_
  name: AddNewEntity
  nameWithType: IAuditTrailService.AddNewEntity
  fullName: Application.Commons.Services.IAuditTrailService.AddNewEntity
- uid: Domain.Enums.EntityName
  commentId: T:Domain.Enums.EntityName
  parent: Domain.Enums
  href: Domain.Enums.EntityName.html
  name: EntityName
  nameWithType: EntityName
  fullName: Domain.Enums.EntityName
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Domain.Enums.ActionBy
  commentId: T:Domain.Enums.ActionBy
  parent: Domain.Enums
  href: Domain.Enums.ActionBy.html
  name: ActionBy
  nameWithType: ActionBy
  fullName: Domain.Enums.ActionBy
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Domain.Enums
  commentId: N:Domain.Enums
  href: Domain.html
  name: Domain.Enums
  nameWithType: Domain.Enums
  fullName: Domain.Enums
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Enums
    name: Enums
    href: Domain.Enums.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Enums
    name: Enums
    href: Domain.Enums.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Application.Commons.Services.IAuditTrailService.UpdateEntity*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.UpdateEntity
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_UpdateEntity__1_Domain_Enums_EntityName_System_Guid_Domain_Enums_ActionType_Domain_Enums_ActionBy___0___0_System_Int32_System_String_
  name: UpdateEntity
  nameWithType: IAuditTrailService.UpdateEntity
  fullName: Application.Commons.Services.IAuditTrailService.UpdateEntity
- uid: Domain.Enums.ActionType
  commentId: T:Domain.Enums.ActionType
  parent: Domain.Enums
  href: Domain.Enums.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: Domain.Enums.ActionType
- uid: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_UpdateEntitiesBulk__1_Domain_Enums_EntityName_System_Collections_Generic_IEnumerable_System_ValueTuple_System_Guid_Domain_Enums_ActionType_Domain_Enums_ActionBy___0___0_System_Int32_System_String___
  name: UpdateEntitiesBulk
  nameWithType: IAuditTrailService.UpdateEntitiesBulk
  fullName: Application.Commons.Services.IAuditTrailService.UpdateEntitiesBulk
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,{T},{T},System.Int32,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Guid EntityId, ActionType ActionType, ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string Comment)>
  nameWithType: IEnumerable<(Guid EntityId, ActionType ActionType, ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string Comment)>
  fullName: System.Collections.Generic.IEnumerable<(System.Guid EntityId, Domain.Enums.ActionType ActionType, Domain.Enums.ActionBy ActionBy, T OldEntity, T NewEntity, int Version, string Comment)>
  nameWithType.vb: IEnumerable(Of (EntityId As Guid, ActionType As ActionType, ActionBy As ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (EntityId As System.Guid, ActionType As Domain.Enums.ActionType, ActionBy As Domain.Enums.ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String))
  name.vb: IEnumerable(Of (EntityId As Guid, ActionType As ActionType, ActionBy As ActionBy, OldEntity As T, NewEntity As T, Version As Integer, Comment As String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.EntityId
    name: EntityId
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.entityid
  - name: ','
  - name: " "
  - uid: Domain.Enums.ActionType
    name: ActionType
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.ActionType
    name: ActionType
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.actiontype
  - name: ','
  - name: " "
  - uid: Domain.Enums.ActionBy
    name: ActionBy
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.ActionBy
    name: ActionBy
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.actionby
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.OldEntity
    name: OldEntity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.oldentity
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.NewEntity
    name: NewEntity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.newentity
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.Version
    name: Version
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.version
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.Comment
    name: Comment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.comment
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.EntityId
    name: EntityId
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.entityid
  - name: " "
  - name: As
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.ActionType
    name: ActionType
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.actiontype
  - name: " "
  - name: As
  - name: " "
  - uid: Domain.Enums.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.ActionBy
    name: ActionBy
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.actionby
  - name: " "
  - name: As
  - name: " "
  - uid: Domain.Enums.ActionBy
    name: ActionBy
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.OldEntity
    name: OldEntity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.oldentity
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.NewEntity
    name: NewEntity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.newentity
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.Version
    name: Version
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.version
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Guid,Domain.Enums.ActionType,Domain.Enums.ActionBy,``0,``0,System.Int32,System.String}.Comment
    name: Comment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.guid,domain.enums.actiontype,domain.enums.actionby,--0,--0,system.int32,system.string-.comment
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Application.Commons.Services.IAuditTrailService.GetEntityTrail*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.GetEntityTrail
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_GetEntityTrail_System_Func_Domain_Auditing_AuditTrail_System_Boolean__System_Int32_System_Int32_System_Guid_
  name: GetEntityTrail
  nameWithType: IAuditTrailService.GetEntityTrail
  fullName: Application.Commons.Services.IAuditTrailService.GetEntityTrail
- uid: System.Func{Domain.Auditing.AuditTrail,System.Boolean}
  commentId: T:System.Func{Domain.Auditing.AuditTrail,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<AuditTrail, bool>
  nameWithType: Func<AuditTrail, bool>
  fullName: System.Func<Domain.Auditing.AuditTrail, bool>
  nameWithType.vb: Func(Of AuditTrail, Boolean)
  fullName.vb: System.Func(Of Domain.Auditing.AuditTrail, Boolean)
  name.vb: Func(Of AuditTrail, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Domain.Auditing.AuditTrail
    name: AuditTrail
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Auditing.AuditTrail
    name: AuditTrail
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable{Domain.Auditing.AuditTrail}
  commentId: T:System.Collections.Generic.IEnumerable{Domain.Auditing.AuditTrail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AuditTrail>
  nameWithType: IEnumerable<AuditTrail>
  fullName: System.Collections.Generic.IEnumerable<Domain.Auditing.AuditTrail>
  nameWithType.vb: IEnumerable(Of AuditTrail)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Domain.Auditing.AuditTrail)
  name.vb: IEnumerable(Of AuditTrail)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Domain.Auditing.AuditTrail
    name: AuditTrail
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Domain.Auditing.AuditTrail
    name: AuditTrail
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_GetEntityTrailDetails_System_Guid_Domain_Enums_EntityName_System_Guid_
  name: GetEntityTrailDetails
  nameWithType: IAuditTrailService.GetEntityTrailDetails
  fullName: Application.Commons.Services.IAuditTrailService.GetEntityTrailDetails
- uid: Domain.Auditing.AuditTrail
  commentId: T:Domain.Auditing.AuditTrail
  parent: Domain.Auditing
  href: Domain.Auditing.AuditTrail.html
  name: AuditTrail
  nameWithType: AuditTrail
  fullName: Domain.Auditing.AuditTrail
- uid: Domain.Auditing
  commentId: N:Domain.Auditing
  href: Domain.html
  name: Domain.Auditing
  nameWithType: Domain.Auditing
  fullName: Domain.Auditing
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Auditing
    name: Auditing
    href: Domain.Auditing.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Auditing
    name: Auditing
    href: Domain.Auditing.html
- uid: Application.Commons.Services.IAuditTrailService.DeleteEntity*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.DeleteEntity
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_DeleteEntity__1_Domain_Enums_EntityName_System_Guid_Domain_Enums_ActionType_Domain_Enums_ActionBy___0_System_Int32_System_String_
  name: DeleteEntity
  nameWithType: IAuditTrailService.DeleteEntity
  fullName: Application.Commons.Services.IAuditTrailService.DeleteEntity
- uid: Application.Commons.Services.IAuditTrailService.Count*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.Count
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_Count_System_Guid_
  name: Count
  nameWithType: IAuditTrailService.Count
  fullName: Application.Commons.Services.IAuditTrailService.Count
- uid: Application.Commons.Services.IAuditTrailService.GetDeletedEntities*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.GetDeletedEntities
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_GetDeletedEntities_System_Func_Domain_Auditing_AuditTrail_System_Boolean__System_Int32_System_Int32_
  name: GetDeletedEntities
  nameWithType: IAuditTrailService.GetDeletedEntities
  fullName: Application.Commons.Services.IAuditTrailService.GetDeletedEntities
- uid: Application.Commons.Services.IAuditTrailService.CountDeletedEntity*
  commentId: Overload:Application.Commons.Services.IAuditTrailService.CountDeletedEntity
  href: Application.Commons.Services.IAuditTrailService.html#Application_Commons_Services_IAuditTrailService_CountDeletedEntity
  name: CountDeletedEntity
  nameWithType: IAuditTrailService.CountDeletedEntity
  fullName: Application.Commons.Services.IAuditTrailService.CountDeletedEntity
