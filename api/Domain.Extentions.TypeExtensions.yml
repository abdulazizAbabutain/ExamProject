### YamlMime:ManagedReference
items:
- uid: Domain.Extentions.TypeExtensions
  commentId: T:Domain.Extentions.TypeExtensions
  id: TypeExtensions
  parent: Domain.Extentions
  children:
  - Domain.Extentions.TypeExtensions.GetFriendlyName(System.Type)
  langs:
  - csharp
  - vb
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: Domain.Extentions.TypeExtensions
  type: Class
  source:
    remote:
      path: src/Domain/Extentions/TypeExtensions.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: TypeExtensions
    path: src/Domain/Extentions/TypeExtensions.cs
    startLine: 8
  assemblies:
  - Domain
  namespace: Domain.Extentions
  syntax:
    content: public static class TypeExtensions
    content.vb: Public Module TypeExtensions
  inheritance:
  - System.Object
- uid: Domain.Extentions.TypeExtensions.GetFriendlyName(System.Type)
  commentId: M:Domain.Extentions.TypeExtensions.GetFriendlyName(System.Type)
  id: GetFriendlyName(System.Type)
  isExtensionMethod: true
  parent: Domain.Extentions.TypeExtensions
  langs:
  - csharp
  - vb
  name: GetFriendlyName(Type)
  nameWithType: TypeExtensions.GetFriendlyName(Type)
  fullName: Domain.Extentions.TypeExtensions.GetFriendlyName(System.Type)
  type: Method
  source:
    remote:
      path: src/Domain/Extentions/TypeExtensions.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: GetFriendlyName
    path: src/Domain/Extentions/TypeExtensions.cs
    startLine: 10
  assemblies:
  - Domain
  namespace: Domain.Extentions
  syntax:
    content: public static string GetFriendlyName(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function GetFriendlyName(type As Type) As String
  overload: Domain.Extentions.TypeExtensions.GetFriendlyName*
references:
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Domain.Extentions.TypeExtensions.GetFriendlyName*
  commentId: Overload:Domain.Extentions.TypeExtensions.GetFriendlyName
  href: Domain.Extentions.TypeExtensions.html#Domain_Extentions_TypeExtensions_GetFriendlyName_System_Type_
  name: GetFriendlyName
  nameWithType: TypeExtensions.GetFriendlyName
  fullName: Domain.Extentions.TypeExtensions.GetFriendlyName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
