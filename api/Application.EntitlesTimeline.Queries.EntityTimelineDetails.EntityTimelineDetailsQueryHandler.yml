### YamlMime:ManagedReference
items:
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler
  commentId: T:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler
  id: EntityTimelineDetailsQueryHandler
  parent: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  children:
  - Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor(Application.Commons.Managers.IAuditManager,MapsterMapper.IMapper)
  - Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EntityTimelineDetailsQueryHandler
  nameWithType: EntityTimelineDetailsQueryHandler
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler
  type: Class
  source:
    remote:
      path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: EntityTimelineDetailsQueryHandler
    path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
    startLine: 9
  assemblies:
  - Application
  namespace: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  syntax:
    content: 'public class EntityTimelineDetailsQueryHandler : IRequestHandler<EntityTimelineDetailsQuery, Result<EntityTimelineDetailsQueryResult>>'
    content.vb: Public Class EntityTimelineDetailsQueryHandler Implements IRequestHandler(Of EntityTimelineDetailsQuery, Result(Of EntityTimelineDetailsQueryResult))
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  extensionMethods:
  - System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  - System.Object.Domain.Extentions.ObjectExtention.IsNull
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor(Application.Commons.Managers.IAuditManager,MapsterMapper.IMapper)
  commentId: M:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor(Application.Commons.Managers.IAuditManager,MapsterMapper.IMapper)
  id: '#ctor(Application.Commons.Managers.IAuditManager,MapsterMapper.IMapper)'
  parent: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler
  langs:
  - csharp
  - vb
  name: EntityTimelineDetailsQueryHandler(IAuditManager, IMapper)
  nameWithType: EntityTimelineDetailsQueryHandler.EntityTimelineDetailsQueryHandler(IAuditManager, IMapper)
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.EntityTimelineDetailsQueryHandler(Application.Commons.Managers.IAuditManager, MapsterMapper.IMapper)
  type: Constructor
  source:
    remote:
      path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: .ctor
    path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
    startLine: 9
  assemblies:
  - Application
  namespace: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  syntax:
    content: public EntityTimelineDetailsQueryHandler(IAuditManager auditManager, IMapper mapper)
    parameters:
    - id: auditManager
      type: Application.Commons.Managers.IAuditManager
    - id: mapper
      type: MapsterMapper.IMapper
    content.vb: Public Sub New(auditManager As IAuditManager, mapper As IMapper)
  overload: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor*
  nameWithType.vb: EntityTimelineDetailsQueryHandler.New(IAuditManager, IMapper)
  fullName.vb: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.New(Application.Commons.Managers.IAuditManager, MapsterMapper.IMapper)
  name.vb: New(IAuditManager, IMapper)
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  commentId: M:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  id: Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  parent: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler
  langs:
  - csharp
  - vb
  name: Handle(EntityTimelineDetailsQuery, CancellationToken)
  nameWithType: EntityTimelineDetailsQueryHandler.Handle(EntityTimelineDetailsQuery, CancellationToken)
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
      branch: master
      repo: https://github.com/abdulazizAbabutain/Examiner.git
    id: Handle
    path: src/Application/EntitlesTimeline/Queries/EntityTimelineDetails/EntityTimelineDetailsQueryHandler.cs
    startLine: 14
  assemblies:
  - Application
  namespace: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  summary: Handles a request
  example: []
  syntax:
    content: public Task<Result<EntityTimelineDetailsQueryResult>> Handle(EntityTimelineDetailsQuery request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
      description: The request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
      description: Response from the request
    content.vb: Public Function Handle(request As EntityTimelineDetailsQuery, cancellationToken As CancellationToken) As Task(Of Result(Of EntityTimelineDetailsQueryResult))
  overload: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle*
  implements:
  - MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
references:
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  commentId: N:Application.EntitlesTimeline.Queries.EntityTimelineDetails
  href: Application.html
  name: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  nameWithType: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  spec.csharp:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.EntitlesTimeline
    name: EntitlesTimeline
    href: Application.EntitlesTimeline.html
  - name: .
  - uid: Application.EntitlesTimeline.Queries
    name: Queries
    href: Application.EntitlesTimeline.Queries.html
  - name: .
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails
    name: EntityTimelineDetails
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.html
  spec.vb:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.EntitlesTimeline
    name: EntitlesTimeline
    href: Application.EntitlesTimeline.html
  - name: .
  - uid: Application.EntitlesTimeline.Queries
    name: Queries
    href: Application.EntitlesTimeline.Queries.html
  - name: .
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails
    name: EntityTimelineDetails
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  commentId: T:MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  name: IRequestHandler<EntityTimelineDetailsQuery, Result<EntityTimelineDetailsQueryResult>>
  nameWithType: IRequestHandler<EntityTimelineDetailsQuery, Result<EntityTimelineDetailsQueryResult>>
  fullName: MediatR.IRequestHandler<Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, Application.Commons.Models.Results.Result<Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult>>
  nameWithType.vb: IRequestHandler(Of EntityTimelineDetailsQuery, Result(Of EntityTimelineDetailsQueryResult))
  fullName.vb: MediatR.IRequestHandler(Of Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, Application.Commons.Models.Results.Result(Of Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult))
  name.vb: IRequestHandler(Of EntityTimelineDetailsQuery, Result(Of EntityTimelineDetailsQueryResult))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
    name: EntityTimelineDetailsQuery
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  - name: ','
  - name: " "
  - uid: Application.Commons.Models.Results.Result`1
    name: Result
    href: Application.Commons.Models.Results.Result-1.html
  - name: <
  - uid: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult
    name: EntityTimelineDetailsQueryResult
    href: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
    name: EntityTimelineDetailsQuery
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  - name: ','
  - name: " "
  - uid: Application.Commons.Models.Results.Result`1
    name: Result
    href: Application.Commons.Models.Results.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult
    name: EntityTimelineDetailsQueryResult
    href: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult.html
  - name: )
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNotNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Domain.Extentions.ObjectExtention.IsNull
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  parent: Domain.Extentions.ObjectExtention
  definition: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  name: IsNotNull(object)
  nameWithType: ObjectExtention.IsNotNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNotNull(object)
  nameWithType.vb: ObjectExtention.IsNotNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNotNull(Object)
  name.vb: IsNotNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNotNull(System.Object)
    name: IsNotNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNotNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions.ObjectExtention
  commentId: T:Domain.Extentions.ObjectExtention
  parent: Domain.Extentions
  href: Domain.Extentions.ObjectExtention.html
  name: ObjectExtention
  nameWithType: ObjectExtention
  fullName: Domain.Extentions.ObjectExtention
- uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
  commentId: M:Domain.Extentions.ObjectExtention.IsNull(System.Object)
  isExternal: true
  href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: ObjectExtention.IsNull(object)
  fullName: Domain.Extentions.ObjectExtention.IsNull(object)
  nameWithType.vb: ObjectExtention.IsNull(Object)
  fullName.vb: Domain.Extentions.ObjectExtention.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Domain.Extentions.ObjectExtention.IsNull(System.Object)
    name: IsNull
    href: Domain.Extentions.ObjectExtention.html#Domain_Extentions_ObjectExtention_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Domain.Extentions
  commentId: N:Domain.Extentions
  href: Domain.html
  name: Domain.Extentions
  nameWithType: Domain.Extentions
  fullName: Domain.Extentions
  spec.csharp:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
  spec.vb:
  - uid: Domain
    name: Domain
    href: Domain.html
  - name: .
  - uid: Domain.Extentions
    name: Extentions
    href: Domain.Extentions.html
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor*
  commentId: Overload:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.#ctor
  href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.html#Application_EntitlesTimeline_Queries_EntityTimelineDetails_EntityTimelineDetailsQueryHandler__ctor_Application_Commons_Managers_IAuditManager_MapsterMapper_IMapper_
  name: EntityTimelineDetailsQueryHandler
  nameWithType: EntityTimelineDetailsQueryHandler.EntityTimelineDetailsQueryHandler
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.EntityTimelineDetailsQueryHandler
  nameWithType.vb: EntityTimelineDetailsQueryHandler.New
  fullName.vb: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.New
  name.vb: New
- uid: Application.Commons.Managers.IAuditManager
  commentId: T:Application.Commons.Managers.IAuditManager
  parent: Application.Commons.Managers
  href: Application.Commons.Managers.IAuditManager.html
  name: IAuditManager
  nameWithType: IAuditManager
  fullName: Application.Commons.Managers.IAuditManager
- uid: MapsterMapper.IMapper
  commentId: T:MapsterMapper.IMapper
  parent: MapsterMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: MapsterMapper.IMapper
- uid: Application.Commons.Managers
  commentId: N:Application.Commons.Managers
  href: Application.html
  name: Application.Commons.Managers
  nameWithType: Application.Commons.Managers
  fullName: Application.Commons.Managers
  spec.csharp:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Managers
    name: Managers
    href: Application.Commons.Managers.html
  spec.vb:
  - uid: Application
    name: Application
    href: Application.html
  - name: .
  - uid: Application.Commons
    name: Commons
    href: Application.Commons.html
  - name: .
  - uid: Application.Commons.Managers
    name: Managers
    href: Application.Commons.Managers.html
- uid: MapsterMapper
  commentId: N:MapsterMapper
  isExternal: true
  name: MapsterMapper
  nameWithType: MapsterMapper
  fullName: MapsterMapper
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle*
  commentId: Overload:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle
  href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.html#Application_EntitlesTimeline_Queries_EntityTimelineDetails_EntityTimelineDetailsQueryHandler_Handle_Application_EntitlesTimeline_Queries_EntityTimelineDetails_EntityTimelineDetailsQuery_System_Threading_CancellationToken_
  name: Handle
  nameWithType: EntityTimelineDetailsQueryHandler.Handle
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQueryHandler.Handle
- uid: MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  name: Handle(EntityTimelineDetailsQuery, CancellationToken)
  nameWithType: IRequestHandler<EntityTimelineDetailsQuery, Result<EntityTimelineDetailsQueryResult>>.Handle(EntityTimelineDetailsQuery, CancellationToken)
  fullName: MediatR.IRequestHandler<Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, Application.Commons.Models.Results.Result<Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult>>.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of EntityTimelineDetailsQuery, Result(Of EntityTimelineDetailsQueryResult)).Handle(EntityTimelineDetailsQuery, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, Application.Commons.Models.Results.Result(Of Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult)).Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
    name: EntityTimelineDetailsQuery
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}.Handle(Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
    name: EntityTimelineDetailsQuery
    href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
  commentId: T:Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
  parent: Application.EntitlesTimeline.Queries.EntityTimelineDetails
  href: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery.html
  name: EntityTimelineDetailsQuery
  nameWithType: EntityTimelineDetailsQuery
  fullName: Application.EntitlesTimeline.Queries.EntityTimelineDetails.EntityTimelineDetailsQuery
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  commentId: T:System.Threading.Tasks.Task{Application.Commons.Models.Results.Result{Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<EntityTimelineDetailsQueryResult>>
  nameWithType: Task<Result<EntityTimelineDetailsQueryResult>>
  fullName: System.Threading.Tasks.Task<Application.Commons.Models.Results.Result<Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult>>
  nameWithType.vb: Task(Of Result(Of EntityTimelineDetailsQueryResult))
  fullName.vb: System.Threading.Tasks.Task(Of Application.Commons.Models.Results.Result(Of Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult))
  name.vb: Task(Of Result(Of EntityTimelineDetailsQueryResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Application.Commons.Models.Results.Result`1
    name: Result
    href: Application.Commons.Models.Results.Result-1.html
  - name: <
  - uid: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult
    name: EntityTimelineDetailsQueryResult
    href: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Application.Commons.Models.Results.Result`1
    name: Result
    href: Application.Commons.Models.Results.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult
    name: EntityTimelineDetailsQueryResult
    href: Application.Commons.SharedModelResult.Timeline.EntityTimelineDetails.EntityTimelineDetailsQueryResult.html
  - name: )
  - name: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
